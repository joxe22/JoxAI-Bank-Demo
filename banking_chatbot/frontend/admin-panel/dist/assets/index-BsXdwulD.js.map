{"version":3,"file":"index-BsXdwulD.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/Common/Header.jsx","../../src/components/Common/Sidebar.jsx","../../src/components/Common/ErrorBoundary.jsx","../../src/services/api.js","../../src/services/authService.js","../../src/pages/LoginPage.jsx","../../src/components/Dashboard/MetricsCards.jsx","../../src/components/Dashboard/ChartsSection.jsx","../../src/pages/DashboardPage.jsx","../../src/components/Tickets/TicketDetail.jsx","../../src/components/Tickets/TicketChat.jsx","../../src/components/Tickets/TicketFilters.jsx","../../src/components/Common/LoadingSpinner.jsx","../../src/services/ticketService.js","../../src/pages/TicketsPage.jsx","../../src/pages/ConversationPage.jsx","../../src/components/Analytics/AnalyticsDashboard.jsx","../../src/components/Analytics/ConversationAnalytics.jsx","../../src/components/Analytics/AgentPerformance.jsx","../../src/pages/AnalyticsPage.jsx","../../src/pages/CustomerPage.jsx","../../src/pages/KnowledgeBasePage.jsx","../../src/components/Settings/BotConfiguration.jsx","../../src/components/Settings/SystemSettings.jsx","../../src/components/Settings/UserManagement.jsx","../../src/pages/SettingsPage.jsx","../../src/services/websocketService.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// frontend/admin-panel/src/components/Common/Header.jsx\n// frontend/admin-panel/src/components/Common/Header.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../../styles/components/Header.css';\n\nconst Header = ({ user, onLogout }) => {\n    const [showUserMenu, setShowUserMenu] = useState(false);\n    const [showNotifications, setShowNotifications] = useState(false);\n    const [darkMode, setDarkMode] = useState(false);\n    const [notifications, setNotifications] = useState([\n        { id: 1, type: 'ticket', message: 'Nuevo ticket #1234 asignado', time: '5 min', unread: true },\n        { id: 2, type: 'message', message: 'Cliente esperando respuesta', time: '10 min', unread: true },\n        { id: 3, type: 'system', message: 'Sistema actualizado', time: '1 hora', unread: false }\n    ]);\n\n    const userMenuRef = useRef(null);\n    const notificationRef = useRef(null);\n\n    const unreadCount = notifications.filter(n => n.unread).length;\n\n    // Cargar preferencia del modo oscuro al iniciar\n    useEffect(() => {\n        const savedTheme = localStorage.getItem('theme');\n        const isDark = savedTheme === 'dark';\n        setDarkMode(isDark);\n        applyTheme(isDark);\n    }, []);\n\n    const applyTheme = (isDark) => {\n        if (isDark) {\n            document.documentElement.setAttribute('data-theme', 'dark');\n        } else {\n            document.documentElement.removeAttribute('data-theme');\n        }\n    };\n\n    // Cerrar men√∫s al hacer click fuera\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {\n                setShowUserMenu(false);\n            }\n            if (notificationRef.current && !notificationRef.current.contains(event.target)) {\n                setShowNotifications(false);\n            }\n        };\n\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    }, []);\n\n    const toggleDarkMode = () => {\n        const newDarkMode = !darkMode;\n        setDarkMode(newDarkMode);\n        applyTheme(newDarkMode);\n        localStorage.setItem('theme', newDarkMode ? 'dark' : 'light');\n\n        // Cerrar el men√∫ despu√©s de cambiar el tema\n        setShowUserMenu(false);\n    };\n\n    const handleMarkAsRead = (notificationId) => {\n        setNotifications(notifications.map(n =>\n            n.id === notificationId ? { ...n, unread: false } : n\n        ));\n    };\n\n    const handleMarkAllAsRead = () => {\n        setNotifications(notifications.map(n => ({ ...n, unread: false })));\n    };\n\n    const getNotificationIcon = (type) => {\n        switch(type) {\n            case 'ticket': return 'üé´';\n            case 'message': return 'üí¨';\n            case 'system': return '‚öôÔ∏è';\n            default: return 'üîî';\n        }\n    };\n\n    return (\n        <header className=\"admin-header\">\n            <div className=\"header-left\">\n                <div className=\"brand\">\n                    <span className=\"brand-icon\">üè¶</span>\n                    <span className=\"brand-text\">Banking ChatBot</span>\n                </div>\n            </div>\n\n            <div className=\"header-center\">\n                <div className=\"search-bar\">\n                    <span className=\"search-icon\">üîç</span>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Buscar tickets, clientes, conversaciones...\"\n                        className=\"search-input\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"header-right\">\n                {/* Notifications */}\n                <div className=\"header-item\" ref={notificationRef}>\n                    <button\n                        className=\"icon-button\"\n                        onClick={() => setShowNotifications(!showNotifications)}\n                    >\n                        üîî\n                        {unreadCount > 0 && (\n                            <span className=\"notification-badge\">{unreadCount}</span>\n                        )}\n                    </button>\n\n                    {showNotifications && (\n                        <div className=\"dropdown-menu notifications-menu\">\n                            <div className=\"dropdown-header\">\n                                <h4>Notificaciones</h4>\n                                {unreadCount > 0 && (\n                                    <button\n                                        className=\"link-button\"\n                                        onClick={handleMarkAllAsRead}\n                                    >\n                                        Marcar todas como le√≠das\n                                    </button>\n                                )}\n                            </div>\n\n                            <div className=\"notifications-list\">\n                                {notifications.length === 0 ? (\n                                    <div className=\"empty-state\">\n                                        <p>No hay notificaciones</p>\n                                    </div>\n                                ) : (\n                                    notifications.map(notification => (\n                                        <div\n                                            key={notification.id}\n                                            className={`notification-item ${notification.unread ? 'unread' : ''}`}\n                                            onClick={() => handleMarkAsRead(notification.id)}\n                                        >\n                                            <span className=\"notification-icon\">\n                                                {getNotificationIcon(notification.type)}\n                                            </span>\n                                            <div className=\"notification-content\">\n                                                <p className=\"notification-message\">{notification.message}</p>\n                                                <span className=\"notification-time\">{notification.time}</span>\n                                            </div>\n                                            {notification.unread && <span className=\"unread-dot\"></span>}\n                                        </div>\n                                    ))\n                                )}\n                            </div>\n\n                            <div className=\"dropdown-footer\">\n                                <button className=\"link-button\">Ver todas</button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                {/* User Menu */}\n                <div className=\"header-item\" ref={userMenuRef}>\n                    <button\n                        className=\"user-button\"\n                        onClick={() => setShowUserMenu(!showUserMenu)}\n                    >\n                        <div className=\"user-avatar\">\n                            {user?.avatar ? (\n                                <img src={user.avatar} alt={user.name} />\n                            ) : (\n                                <span>{user?.name?.charAt(0).toUpperCase() || 'U'}</span>\n                            )}\n                        </div>\n                        <div className=\"user-info\">\n                            <span className=\"user-name\">{user?.name || 'Usuario'}</span>\n                            <span className=\"user-role\">{user?.role || 'Agente'}</span>\n                        </div>\n                        <span className=\"dropdown-arrow\">‚ñº</span>\n                    </button>\n\n                    {showUserMenu && (\n                        <div className=\"dropdown-menu user-menu\">\n                            <div className=\"user-menu-header\">\n                                <div className=\"user-avatar large\">\n                                    {user?.avatar ? (\n                                        <img src={user.avatar} alt={user.name} />\n                                    ) : (\n                                        <span>{user?.name?.charAt(0).toUpperCase() || 'U'}</span>\n                                    )}\n                                </div>\n                                <div>\n                                    <p className=\"user-menu-name\">{user?.name || 'Usuario'}</p>\n                                    <p className=\"user-menu-email\">{user?.email || 'email@example.com'}</p>\n                                </div>\n                            </div>\n\n                            <div className=\"menu-divider\"></div>\n\n                            {/* Modo Oscuro - CORREGIDO Y FUNCIONAL */}\n                            <button className=\"menu-item dark-mode-toggle\" onClick={toggleDarkMode}>\n                                <span>{darkMode ? '‚òÄÔ∏è' : 'üåô'}</span>\n                                {darkMode ? 'Modo Claro' : 'Modo Oscuro'}\n                                <div className={`toggle-switch-small ${darkMode ? 'active' : ''}`}>\n                                    <span className=\"toggle-slider\"></span>\n                                </div>\n                            </button>\n\n                            <button className=\"menu-item\">\n                                <span>üë§</span> Mi Perfil\n                            </button>\n                            <button className=\"menu-item\">\n                                <span>‚öôÔ∏è</span> Configuraci√≥n\n                            </button>\n                            <button className=\"menu-item\">\n                                <span>‚ùì</span> Ayuda\n                            </button>\n\n                            <div className=\"menu-divider\"></div>\n\n                            <button className=\"menu-item danger\" onClick={onLogout}>\n                                <span>üö™</span> Cerrar Sesi√≥n\n                            </button>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;","// frontend/admin-panel/src/components/Common/Sidebar.jsx\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../../styles/components/Sidebar.css';\n\nconst Sidebar = ({ collapsed, onToggle }) => {\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const menuItems = [\n        {\n            id: 'dashboard',\n            icon: 'üìä',\n            label: 'Dashboard',\n            path: '/dashboard',\n            badge: null\n        },\n        {\n            id: 'tickets',\n            icon: 'üé´',\n            label: 'Tickets',\n            path: '/tickets',\n            badge: 12\n        },\n        {\n            id: 'conversations',\n            icon: 'üí¨',\n            label: 'Conversaciones',\n            path: '/conversations',\n            badge: 5\n        },\n        {\n            id: 'analytics',\n            icon: 'üìà',\n            label: 'Analytics',\n            path: '/analytics',\n            badge: null\n        },\n        {\n            id: 'customers',\n            icon: 'üë•',\n            label: 'Clientes',\n            path: '/customers',\n            badge: null\n        },\n        {\n            id: 'knowledge',\n            icon: 'üìö',\n            label: 'Base de Conocimiento',\n            path: '/knowledge',\n            badge: null\n        },\n        {\n            id: 'settings',\n            icon: '‚öôÔ∏è',\n            label: 'Configuraci√≥n',\n            path: '/settings',\n            badge: null\n        }\n    ];\n\n    const isActive = (path) => {\n        return location.pathname === path || location.pathname.startsWith(path + '/');\n    };\n\n    const handleNavigate = (path) => {\n        navigate(path);\n    };\n\n    return (\n        <aside className={`admin-sidebar ${collapsed ? 'collapsed' : ''}`}>\n            <button\n                className=\"sidebar-toggle\"\n                onClick={onToggle}\n                title={collapsed ? 'Expandir' : 'Contraer'}\n            >\n                {collapsed ? '‚ñ∂' : '‚óÄ'}\n            </button>\n\n            <nav className=\"sidebar-nav\">\n                <ul className=\"nav-list\">\n                    {menuItems.map(item => (\n                        <li key={item.id} className=\"nav-item\">\n                            <button\n                                className={`nav-link ${isActive(item.path) ? 'active' : ''}`}\n                                onClick={() => handleNavigate(item.path)}\n                                title={collapsed ? item.label : ''}\n                            >\n                                <span className=\"nav-icon\">{item.icon}</span>\n                                {!collapsed && (\n                                    <>\n                                        <span className=\"nav-label\">{item.label}</span>\n                                        {item.badge && (\n                                            <span className=\"nav-badge\">{item.badge}</span>\n                                        )}\n                                    </>\n                                )}\n                            </button>\n                        </li>\n                    ))}\n                </ul>\n            </nav>\n\n            {!collapsed && (\n                <div className=\"sidebar-footer\">\n                    <div className=\"status-card\">\n                        <div className=\"status-header\">\n                            <span className=\"status-dot online\"></span>\n                            <span className=\"status-text\">Sistema Operativo</span>\n                        </div>\n                        <div className=\"status-stats\">\n                            <div className=\"stat\">\n                                <span className=\"stat-label\">Agentes activos</span>\n                                <span className=\"stat-value\">8/12</span>\n                            </div>\n                            <div className=\"stat\">\n                                <span className=\"stat-label\">Tiempo de respuesta</span>\n                                <span className=\"stat-value\">2.3 min</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </aside>\n    );\n};\n\nexport default Sidebar;","// frontend/admin-panel/src/components/Common/ErrorBoundary.jsx\nimport React, { Component } from 'react';\nimport '../../styles/components/ErrorBoundary.css';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            error: null,\n            errorInfo: null\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.error('Error capturado por ErrorBoundary:', error, errorInfo);\n\n        this.setState({\n            error,\n            errorInfo\n        });\n\n        // Aqu√≠ podr√≠as enviar el error a un servicio de logging\n        // logErrorToService(error, errorInfo);\n    }\n\n    handleReload = () => {\n        window.location.reload();\n    };\n\n    handleGoHome = () => {\n        window.location.href = '/';\n    };\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className=\"error-boundary\">\n                    <div className=\"error-container\">\n                        <div className=\"error-icon\">‚ö†Ô∏è</div>\n                        <h1 className=\"error-title\">¬°Oops! Algo sali√≥ mal</h1>\n                        <p className=\"error-message\">\n                            Ha ocurrido un error inesperado. Nuestro equipo ha sido notificado.\n                        </p>\n\n                        {process.env.NODE_ENV === 'development' && this.state.error && (\n                            <details className=\"error-details\">\n                                <summary>Detalles del error (solo en desarrollo)</summary>\n                                <pre className=\"error-stack\">\n                  {this.state.error.toString()}\n                                    {this.state.errorInfo && this.state.errorInfo.componentStack}\n                </pre>\n                            </details>\n                        )}\n\n                        <div className=\"error-actions\">\n                            <button\n                                className=\"btn btn-primary\"\n                                onClick={this.handleReload}\n                            >\n                                Recargar P√°gina\n                            </button>\n                            <button\n                                className=\"btn btn-secondary\"\n                                onClick={this.handleGoHome}\n                            >\n                                Ir al Inicio\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","// frontend/admin-panel/src/services/api.js\n// Cliente API general para el admin panel\n\nconst API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:8000';\n\nclass ApiService {\n    constructor() {\n        this.baseUrl = `${API_BASE_URL}/api/v1`;\n    }\n\n    // Helper para obtener headers con autenticaci√≥n\n    getHeaders() {\n        const token = localStorage.getItem('token');\n        return {\n            'Content-Type': 'application/json',\n            ...(token && { 'Authorization': `Bearer ${token}` })\n        };\n    }\n\n    // Helper para hacer requests\n    async request(endpoint, options = {}) {\n        const url = `${this.baseUrl}${endpoint}`;\n\n        const config = {\n            headers: this.getHeaders(),\n            ...options\n        };\n\n        try {\n            const response = await fetch(url, config);\n\n            // Manejar token expirado\n            if (response.status === 401) {\n                localStorage.removeItem('token');\n                localStorage.removeItem('user');\n                window.location.href = '/login';\n                throw new Error('Sesi√≥n expirada');\n            }\n\n            if (!response.ok) {\n                const error = await response.json().catch(() => ({}));\n                throw new Error(error.message || `HTTP error! status: ${response.status}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error('API request error:', error);\n            throw error;\n        }\n    }\n\n    // GET request\n    async get(endpoint) {\n        return this.request(endpoint, {\n            method: 'GET'\n        });\n    }\n\n    // POST request\n    async post(endpoint, data) {\n        return this.request(endpoint, {\n            method: 'POST',\n            body: JSON.stringify(data)\n        });\n    }\n\n    // PUT request\n    async put(endpoint, data) {\n        return this.request(endpoint, {\n            method: 'PUT',\n            body: JSON.stringify(data)\n        });\n    }\n\n    // PATCH request\n    async patch(endpoint, data) {\n        return this.request(endpoint, {\n            method: 'PATCH',\n            body: JSON.stringify(data)\n        });\n    }\n\n    // DELETE request\n    async delete(endpoint) {\n        return this.request(endpoint, {\n            method: 'DELETE'\n        });\n    }\n\n    // Upload file\n    async upload(endpoint, file, additionalData = {}) {\n        const formData = new FormData();\n        formData.append('file', file);\n\n        Object.keys(additionalData).forEach(key => {\n            formData.append(key, additionalData[key]);\n        });\n\n        const token = localStorage.getItem('token');\n        const headers = {};\n        if (token) {\n            headers['Authorization'] = `Bearer ${token}`;\n        }\n\n        const response = await fetch(`${this.baseUrl}${endpoint}`, {\n            method: 'POST',\n            headers,\n            body: formData\n        });\n\n        if (!response.ok) {\n            const error = await response.json().catch(() => ({}));\n            throw new Error(error.message || 'Upload failed');\n        }\n\n        return await response.json();\n    }\n}\n\nexport default new ApiService();","// frontend/admin-panel/src/services/authService.js\nimport api from './api';\n\n// Mock credentials para desarrollo\nconst MOCK_USERS = [\n    {\n        email: 'admin@joxai.com',\n        password: 'admin123',\n        user: {\n            id: 1,\n            name: 'Admin User',\n            email: 'admin@joxai.com',\n            role: 'admin'\n        }\n    },\n    {\n        email: 'agent@joxai.com',\n        password: 'agent123',\n        user: {\n            id: 2,\n            name: 'Agent User',\n            email: 'agent@joxai.com',\n            role: 'agent'\n        }\n    }\n];\n\nclass AuthService {\n    constructor() {\n        this.useMockAuth = import.meta.env.VITE_USE_MOCK_AUTH === 'true' || true; // Default true para desarrollo\n    }\n\n    // Login\n    async login(email, password) {\n        // Si usamos mock auth (modo desarrollo)\n        if (this.useMockAuth) {\n            return this.mockLogin(email, password);\n        }\n\n        // Login real con API\n        try {\n            const response = await api.post('/auth/login', {\n                email,\n                password\n            });\n\n            if (response.token) {\n                localStorage.setItem('token', response.token);\n                localStorage.setItem('user', JSON.stringify(response.user));\n            }\n\n            return {\n                success: true,\n                token: response.token,\n                user: response.user\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message || 'Error al iniciar sesi√≥n'\n            };\n        }\n    }\n\n    // Mock login para desarrollo\n    mockLogin(email, password) {\n        return new Promise((resolve) => {\n            // Simular delay de red\n            setTimeout(() => {\n                const user = MOCK_USERS.find(\n                    u => u.email === email && u.password === password\n                );\n\n                if (user) {\n                    const mockToken = 'mock-jwt-token-' + Date.now();\n                    localStorage.setItem('token', mockToken);\n                    localStorage.setItem('user', JSON.stringify(user.user));\n\n                    resolve({\n                        success: true,\n                        token: mockToken,\n                        user: user.user\n                    });\n                } else {\n                    resolve({\n                        success: false,\n                        message: 'Email o contrase√±a incorrectos'\n                    });\n                }\n            }, 500);\n        });\n    }\n\n    // Logout\n    logout() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        window.location.href = '/login';\n    }\n\n    // Get current user\n    getCurrentUser() {\n        const userStr = localStorage.getItem('user');\n        if (userStr) {\n            try {\n                return JSON.parse(userStr);\n            } catch (error) {\n                console.error('Error parsing user data:', error);\n                return null;\n            }\n        }\n        return null;\n    }\n\n    // Check if user is authenticated\n    isAuthenticated() {\n        const token = localStorage.getItem('token');\n        return !!token;\n    }\n\n    // Verify token\n    async verifyToken() {\n        if (this.useMockAuth) {\n            return !!localStorage.getItem('token');\n        }\n\n        try {\n            const response = await api.get('/auth/verify');\n            return response.valid;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    // Refresh token\n    async refreshToken() {\n        if (this.useMockAuth) {\n            const token = localStorage.getItem('token');\n            return token;\n        }\n\n        try {\n            const response = await api.post('/auth/refresh');\n            if (response.token) {\n                localStorage.setItem('token', response.token);\n            }\n            return response.token;\n        } catch (error) {\n            console.error('Error refreshing token:', error);\n            return null;\n        }\n    }\n\n    // Change password\n    async changePassword(currentPassword, newPassword) {\n        if (this.useMockAuth) {\n            return {\n                success: true,\n                message: 'Contrase√±a actualizada (mock)'\n            };\n        }\n\n        try {\n            const response = await api.post('/auth/change-password', {\n                currentPassword,\n                newPassword\n            });\n            return {\n                success: true,\n                message: response.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message\n            };\n        }\n    }\n\n    // Request password reset\n    async requestPasswordReset(email) {\n        if (this.useMockAuth) {\n            return {\n                success: true,\n                message: 'Email de recuperaci√≥n enviado (mock)'\n            };\n        }\n\n        try {\n            const response = await api.post('/auth/forgot-password', { email });\n            return {\n                success: true,\n                message: response.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message\n            };\n        }\n    }\n\n    // Reset password with token\n    async resetPassword(token, newPassword) {\n        if (this.useMockAuth) {\n            return {\n                success: true,\n                message: 'Contrase√±a restablecida (mock)'\n            };\n        }\n\n        try {\n            const response = await api.post('/auth/reset-password', {\n                token,\n                newPassword\n            });\n            return {\n                success: true,\n                message: response.message\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message\n            };\n        }\n    }\n\n    // Update user profile\n    async updateProfile(userData) {\n        if (this.useMockAuth) {\n            const currentUser = this.getCurrentUser();\n            const updatedUser = { ...currentUser, ...userData };\n            localStorage.setItem('user', JSON.stringify(updatedUser));\n\n            return {\n                success: true,\n                user: updatedUser\n            };\n        }\n\n        try {\n            const response = await api.put('/auth/profile', userData);\n\n            // Update local models\n            const currentUser = this.getCurrentUser();\n            const updatedUser = { ...currentUser, ...response.user };\n            localStorage.setItem('user', JSON.stringify(updatedUser));\n\n            return {\n                success: true,\n                user: updatedUser\n            };\n        } catch (error) {\n            return {\n                success: false,\n                message: error.message\n            };\n        }\n    }\n}\n\nexport default new AuthService();","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport authService from \"../services/authService\";\nimport \"../styles/pages/LoginPage.css\";\n\nconst LoginPage = () => {\n    const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError(\"\");\n        setLoading(true);\n\n        try {\n            const result = await authService.login(credentials.email, credentials.password);\n\n            if (result.success) {\n                // Login exitoso - redirigir al dashboard\n                navigate(\"/dashboard\");\n            } else {\n                // Mostrar error\n                setError(result.message || \"Error al iniciar sesi√≥n\");\n            }\n        } catch (err) {\n            setError(\"Error de conexi√≥n. Por favor intenta de nuevo.\");\n            console.error(\"Login error:\", err);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"login-page\">\n            <div className=\"login-container\">\n                <h1>JoxAI Bank Admin</h1>\n\n                {error && (\n                    <div className=\"error-message\">\n                        {error}\n                    </div>\n                )}\n\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        value={credentials.email}\n                        onChange={(e) => setCredentials({...credentials, email: e.target.value})}\n                        required\n                        disabled={loading}\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={credentials.password}\n                        onChange={(e) => setCredentials({...credentials, password: e.target.value})}\n                        required\n                        disabled={loading}\n                    />\n                    <button type=\"submit\" disabled={loading}>\n                        {loading ? \"Iniciando sesi√≥n...\" : \"Login\"}\n                    </button>\n                </form>\n\n                {/* Credentials para desarrollo */}\n                <div className=\"dev-credentials\">\n                    <small>\n                        <strong>Desarrollo:</strong> admin@joxai.com / admin123\n                    </small>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;","// frontend/admin-panel/src/components/Dashboard/MetricsCards.jsx - MEJORADO\nimport React from \"react\";\nimport \"../../styles/components/MetricsCards.css\";\n\nconst MetricsCards = ({ metrics, loading, timeRange }) => {\n    const cards = [\n        {\n            title: \"Total Tickets\",\n            value: metrics.totalTickets,\n            icon: \"üìä\",\n            trend: \"+12%\",\n            trendDirection: \"up\"\n        },\n        {\n            title: \"Active Chats\",\n            value: metrics.activeChats,\n            icon: \"üí¨\",\n            trend: \"+5%\",\n            trendDirection: \"up\"\n        },\n        {\n            title: \"Avg Response\",\n            value: metrics.avgResponseTime,\n            icon: \"‚è±Ô∏è\",\n            trend: \"-0.5m\",\n            trendDirection: \"down\"\n        },\n        {\n            title: \"Satisfaction\",\n            value: metrics.satisfaction,\n            icon: \"‚≠ê\",\n            trend: \"+0.2\",\n            trendDirection: \"up\"\n        }\n    ];\n\n    const handleCardClick = (cardTitle) => {\n        // Efecto de ripple ya est√° en CSS, aqu√≠ podemos agregar l√≥gica adicional\n        console.log(`Card clicked: ${cardTitle}`);\n    };\n\n    if (loading) {\n        return (\n            <div className=\"metrics-cards\">\n                {[1, 2, 3, 4].map((index) => (\n                    <div key={index} className=\"metric-card skeleton\">\n                        <div className=\"skeleton-icon\"></div>\n                        <div className=\"metric-content\">\n                            <div className=\"skeleton-line short\"></div>\n                            <div className=\"skeleton-line\" style={{width: '70%'}}></div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"metrics-cards\">\n            {cards.map((card, index) => (\n                <div\n                    key={index}\n                    className=\"metric-card\"\n                    onClick={() => handleCardClick(card.title)}\n                    role=\"button\"\n                    tabIndex={0}\n                    aria-label={`Ver detalles de ${card.title}`}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter' || e.key === ' ') {\n                            handleCardClick(card.title);\n                        }\n                    }}\n                >\n                    <div className=\"metric-icon\">{card.icon}</div>\n                    <div className=\"metric-content\">\n                        <h3>{card.title}</h3>\n                        <p className=\"metric-value\">{card.value}</p>\n                        <div className={`metric-trend trend-${card.trendDirection}`}>\n                            {card.trend}\n                        </div>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default MetricsCards;","// frontend/admin-panel/src/components/Dashboard/ChartsSection.jsx - MEJORADO\nimport React, { useState, useEffect } from 'react';\nimport '../../styles/components/ChartsSection.css';\n\nconst ChartsSection = ({ data, timeRange, loading }) => {\n    const [conversationsPeriod, setConversationsPeriod] = useState('week');\n    const [ticketsPeriod, setTicketsPeriod] = useState('week');\n    const [isAnimating, setIsAnimating] = useState(false);\n\n    // Datos de ejemplo mejorados para las gr√°ficas\n    const conversationsData = {\n        week: [120, 150, 180, 165, 200, 190, 210],\n        month: [1200, 1400, 1600, 1500, 1800, 2000, 2200, 2100, 2300, 2400, 2500, 2600],\n        year: [12000, 14000, 16000, 15000, 18000, 20000, 22000, 24000, 26000, 28000, 30000, 32000]\n    };\n\n    const ticketsData = {\n        week: { open: 45, inProgress: 30, resolved: 80, closed: 120 },\n        month: { open: 180, inProgress: 120, resolved: 320, closed: 480 },\n        year: { open: 2160, inProgress: 1440, resolved: 3840, closed: 5760 }\n    };\n\n    const days = ['Lun', 'Mar', 'Mi√©', 'Jue', 'Vie', 'S√°b', 'Dom'];\n    const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];\n\n    const getMaxValue = (data) => Math.max(...data);\n    const getLabels = (period) => period === 'week' ? days : months;\n\n    const handlePeriodChange = (setter, period) => {\n        setIsAnimating(true);\n        setter(period);\n        setTimeout(() => setIsAnimating(false), 600);\n    };\n\n    const handleActivityClick = (activity) => {\n        console.log('Activity clicked:', activity);\n        // Navegar a la actividad o mostrar detalles\n    };\n\n    if (loading) {\n        return (\n            <div className=\"charts-section\">\n                {[1, 2, 3].map((index) => (\n                    <div key={index} className={`chart-card ${index === 3 ? 'full-width' : ''} skeleton`}>\n                        <div className=\"chart-header\">\n                            <div className=\"skeleton-line\" style={{width: '40%', height: '24px'}}></div>\n                            <div className=\"chart-controls\">\n                                {[1, 2, 3].map(btn => (\n                                    <div key={btn} className=\"skeleton-line\" style={{width: '60px', height: '32px'}}></div>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"chart-body\">\n                            <div className=\"skeleton-line\" style={{height: '200px'}}></div>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"charts-section\">\n            {/* Conversaciones en el tiempo */}\n            <div className=\"chart-card\">\n                <div className=\"chart-header\">\n                    <h3 className=\"chart-title\">Conversaciones</h3>\n                    <div className=\"chart-controls\">\n                        <button\n                            className={`period-btn ${conversationsPeriod === 'week' ? 'active' : ''}`}\n                            onClick={() => handlePeriodChange(setConversationsPeriod, 'week')}\n                            aria-label=\"Ver datos de la semana\"\n                        >\n                            Semana\n                        </button>\n                        <button\n                            className={`period-btn ${conversationsPeriod === 'month' ? 'active' : ''}`}\n                            onClick={() => handlePeriodChange(setConversationsPeriod, 'month')}\n                            aria-label=\"Ver datos del mes\"\n                        >\n                            Mes\n                        </button>\n                        <button\n                            className={`period-btn ${conversationsPeriod === 'year' ? 'active' : ''}`}\n                            onClick={() => handlePeriodChange(setConversationsPeriod, 'year')}\n                            aria-label=\"Ver datos del a√±o\"\n                        >\n                            A√±o\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"chart-body\">\n                    <div className={`line-chart ${isAnimating ? 'animating' : ''}`}>\n                        {conversationsData[conversationsPeriod].map((value, index) => {\n                            const maxValue = getMaxValue(conversationsData[conversationsPeriod]);\n                            const height = (value / maxValue) * 100;\n                            const labels = getLabels(conversationsPeriod);\n\n                            return (\n                                <div key={index} className=\"chart-bar-wrapper\">\n                                    <div className=\"chart-tooltip\">\n                                        {value.toLocaleString()} conversaciones\n                                    </div>\n                                    <div\n                                        className=\"chart-bar\"\n                                        style={{\n                                            height: `${height}%`,\n                                            animationDelay: `${index * 0.1}s`\n                                        }}\n                                    ></div>\n                                    <span className=\"chart-label\">{labels[index]}</span>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n\n            {/* Estado de Tickets */}\n            <div className=\"chart-card\">\n                <div className=\"chart-header\">\n                    <h3 className=\"chart-title\">Estado de Tickets</h3>\n                    <div className=\"chart-controls\">\n                        <button\n                            className={`period-btn ${ticketsPeriod === 'week' ? 'active' : ''}`}\n                            onClick={() => handlePeriodChange(setTicketsPeriod, 'week')}\n                            aria-label=\"Ver tickets de la semana\"\n                        >\n                            Semana\n                        </button>\n                        <button\n                            className={`period-btn ${ticketsPeriod === 'month' ? 'active' : ''}`}\n                            onClick={() => handlePeriodChange(setTicketsPeriod, 'month')}\n                            aria-label=\"Ver tickets del mes\"\n                        >\n                            Mes\n                        </button>\n                        <button\n                            className={`period-btn ${ticketsPeriod === 'year' ? 'active' : ''}`}\n                            onClick={() => handlePeriodChange(setTicketsPeriod, 'year')}\n                            aria-label=\"Ver tickets del a√±o\"\n                        >\n                            A√±o\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"chart-body\">\n                    <div className=\"stats-grid\">\n                        {Object.entries(ticketsData[ticketsPeriod]).map(([key, value], index) => {\n                            const total = Object.values(ticketsData[ticketsPeriod]).reduce((a, b) => a + b, 0);\n                            const percentage = ((value / total) * 100).toFixed(1);\n\n                            const colors = {\n                                open: '#f093fb',\n                                inProgress: '#4facfe',\n                                resolved: '#43e97b',\n                                closed: '#c2e9fb'\n                            };\n\n                            const labels = {\n                                open: 'Abiertos',\n                                inProgress: 'En Progreso',\n                                resolved: 'Resueltos',\n                                closed: 'Cerrados'\n                            };\n\n                            const icons = {\n                                open: 'üìã',\n                                inProgress: 'üîÑ',\n                                resolved: '‚úÖ',\n                                closed: 'üîí'\n                            };\n\n                            return (\n                                <div\n                                    key={key}\n                                    className=\"ticket-stat\"\n                                    style={{ animationDelay: `${index * 0.1}s` }}\n                                >\n                                    <div className=\"stat-header\">\n                                        <span className=\"stat-icon\">{icons[key]}</span>\n                                        <div className=\"stat-indicator\" style={{ background: colors[key] }}></div>\n                                    </div>\n                                    <div className=\"stat-info\">\n                                        <span className=\"stat-label\">{labels[key]}</span>\n                                        <div className=\"stat-values\">\n                                            <span className=\"stat-count\">{value.toLocaleString()}</span>\n                                            <span className=\"stat-percentage\">{percentage}%</span>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n\n            {/* Actividad Reciente */}\n            <div className=\"chart-card full-width\">\n                <div className=\"chart-header\">\n                    <h3 className=\"chart-title\">Actividad Reciente</h3>\n                    <button\n                        className=\"link-button\"\n                        aria-label=\"Ver toda la actividad\"\n                    >\n                        Ver todo ‚Üí\n                    </button>\n                </div>\n\n                <div className=\"chart-body\">\n                    <div className=\"activity-list\">\n                        {[\n                            { type: 'ticket', user: 'Juan P√©rez', action: 'cre√≥ el ticket', item: '#1234', time: 'hace 5 min', icon: 'üé´', priority: 'high' },\n                            { type: 'message', user: 'Mar√≠a Garc√≠a', action: 'respondi√≥ en', item: '#1233', time: 'hace 12 min', icon: 'üí¨', priority: 'medium' },\n                            { type: 'resolved', user: 'Carlos L√≥pez', action: 'resolvi√≥', item: '#1232', time: 'hace 25 min', icon: '‚úÖ', priority: 'low' },\n                            { type: 'escalated', user: 'Ana Mart√≠nez', action: 'escal√≥', item: '#1231', time: 'hace 1 hora', icon: '‚¨ÜÔ∏è', priority: 'high' },\n                            { type: 'closed', user: 'Sistema', action: 'cerr√≥ autom√°ticamente', item: '#1230', time: 'hace 2 horas', icon: 'üîí', priority: 'low' }\n                        ].map((activity, index) => (\n                            <div\n                                key={index}\n                                className={`activity-item priority-${activity.priority}`}\n                                onClick={() => handleActivityClick(activity)}\n                                role=\"button\"\n                                tabIndex={0}\n                                aria-label={`Actividad: ${activity.user} ${activity.action} ${activity.item}`}\n                                onKeyPress={(e) => {\n                                    if (e.key === 'Enter' || e.key === ' ') {\n                                        handleActivityClick(activity);\n                                    }\n                                }}\n                            >\n                                <span className=\"activity-icon\">{activity.icon}</span>\n                                <div className=\"activity-content\">\n                                    <p className=\"activity-text\">\n                                        <strong>{activity.user}</strong> {activity.action} <span className=\"activity-highlight\">{activity.item}</span>\n                                    </p>\n                                    <span className=\"activity-time\">{activity.time}</span>\n                                </div>\n                                <div className=\"activity-priority-indicator\"></div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ChartsSection;","// frontend/admin-panel/src/pages/DashboardPage.jsx\nimport React, { useState } from \"react\";\nimport MetricsCards from \"../components/Dashboard/MetricsCards\";\nimport ChartsSection from \"../components/Dashboard/ChartsSection\";\nimport Modal from \"../components/Common/Modal\"\nimport \"../styles/pages/DashboardPage.css\";\n\nconst DashboardPage = () => {\n    const [timeRange, setTimeRange] = useState('today');\n\n    const metrics = {\n        totalTickets: 150,\n        activeChats: 23,\n        avgResponseTime: \"2.5m\",\n        satisfaction: 4.5,\n        newTickets: 12,\n        resolvedTickets: 45\n    };\n\n    const chartData = {\n        conversations: {\n            today: [65, 78, 90, 81, 56, 55, 40],\n            week: [120, 150, 180, 165, 200, 190, 210],\n            month: [850, 920, 780, 1100, 950, 1200, 1300, 1250, 1400, 1350, 1500, 1600]\n        }\n    };\n\n    return (\n        <div className=\"dashboard-page\">\n            <div className=\"dashboard-header\">\n                <div className=\"header-left\">\n                    <h1>Dashboard</h1>\n                    <p>Resumen general del sistema y m√©tricas</p>\n                </div>\n                <div className=\"header-controls\">\n                    <select\n                        value={timeRange}\n                        onChange={(e) => setTimeRange(e.target.value)}\n                        className=\"time-range-select\"\n                    >\n                        <option value=\"today\">Hoy</option>\n                        <option value=\"week\">Esta Semana</option>\n                        <option value=\"month\">Este Mes</option>\n                        <option value=\"year\">Este A√±o</option>\n                    </select>\n                </div>\n            </div>\n\n            <MetricsCards metrics={metrics} loading={false} />\n            <ChartsSection data={chartData} timeRange={timeRange} />\n        </div>\n    );\n};\n\nexport default DashboardPage;\n","// frontend/admin-panel/src/components/Tickets/TicketDetail.jsx\nimport React, { useState } from 'react';\nimport '../../styles/components/TicketDetails.css';\n\nconst TicketDetail = ({ ticket, onUpdate, onClose }) => {\n    const [status, setStatus] = useState(ticket?.status || 'open');\n    const [priority, setPriority] = useState(ticket?.priority || 'medium');\n    const [assignedTo, setAssignedTo] = useState(ticket?.assignedTo || '');\n    const [notes, setNotes] = useState('');\n    const [showNotesForm, setShowNotesForm] = useState(false);\n\n    const statusOptions = [\n        { value: 'open', label: 'Abierto', color: '#f093fb' },\n        { value: 'in_progress', label: 'En Progreso', color: '#4facfe' },\n        { value: 'waiting', label: 'Esperando', color: '#feca57' },\n        { value: 'resolved', label: 'Resuelto', color: '#43e97b' },\n        { value: 'closed', label: 'Cerrado', color: '#95a5a6' }\n    ];\n\n    const priorityOptions = [\n        { value: 'low', label: 'Baja', color: '#4CAF50' },\n        { value: 'medium', label: 'Media', color: '#FF9800' },\n        { value: 'high', label: 'Alta', color: '#F44336' },\n        { value: 'urgent', label: 'Urgente', color: '#9C27B0' }\n    ];\n\n    const agents = [\n        { id: 1, name: 'Juan P√©rez' },\n        { id: 2, name: 'Mar√≠a Garc√≠a' },\n        { id: 3, name: 'Carlos L√≥pez' },\n        { id: 4, name: 'Ana Mart√≠nez' }\n    ];\n\n    const handleSave = async () => {\n        try {\n            await onUpdate({\n                id: ticket.id,\n                status,\n                priority,\n                assignedTo\n            });\n            alert('Ticket actualizado correctamente');\n        } catch (error) {\n            console.error('Error actualizando ticket:', error);\n            alert('Error al actualizar el ticket');\n        }\n    };\n\n    const handleAddNote = () => {\n        if (notes.trim()) {\n            // Aqu√≠ ir√≠a la l√≥gica para agregar la nota\n            console.log('Agregar nota:', notes);\n            setNotes('');\n            setShowNotesForm(false);\n        }\n    };\n\n    const formatDate = (date) => {\n        return new Date(date).toLocaleString('es-ES', {\n            day: '2-digit',\n            month: 'short',\n            year: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    if (!ticket) {\n        return (\n            <div className=\"ticket-detail-empty\">\n                <p>Selecciona un ticket para ver los detalles</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"ticket-detail\">\n            <div className=\"ticket-detail-header\">\n                <div className=\"header-left\">\n                    <h2 className=\"ticket-id\">#{ticket.id}</h2>\n                    <span className=\"ticket-category\">{ticket.category}</span>\n                </div>\n                <button className=\"close-button\" onClick={onClose}>‚úï</button>\n            </div>\n\n            <div className=\"ticket-detail-body\">\n                {/* Informaci√≥n Principal */}\n                <section className=\"detail-section\">\n                    <h3 className=\"section-title\">Informaci√≥n del Ticket</h3>\n\n                    <div className=\"info-grid\">\n                        <div className=\"info-item\">\n                            <label>Estado</label>\n                            <select\n                                value={status}\n                                onChange={(e) => setStatus(e.target.value)}\n                                className=\"status-select\"\n                            >\n                                {statusOptions.map(option => (\n                                    <option key={option.value} value={option.value}>\n                                        {option.label}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <div className=\"info-item\">\n                            <label>Prioridad</label>\n                            <select\n                                value={priority}\n                                onChange={(e) => setPriority(e.target.value)}\n                                className=\"priority-select\"\n                            >\n                                {priorityOptions.map(option => (\n                                    <option key={option.value} value={option.value}>\n                                        {option.label}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <div className=\"info-item\">\n                            <label>Asignado a</label>\n                            <select\n                                value={assignedTo}\n                                onChange={(e) => setAssignedTo(e.target.value)}\n                                className=\"agent-select\"\n                            >\n                                <option value=\"\">Sin asignar</option>\n                                {agents.map(agent => (\n                                    <option key={agent.id} value={agent.id}>\n                                        {agent.name}\n                                    </option>\n                                ))}\n                            </select>\n                        </div>\n\n                        <div className=\"info-item\">\n                            <label>Creado</label>\n                            <span className=\"info-value\">{formatDate(ticket.createdAt)}</span>\n                        </div>\n\n                        <div className=\"info-item\">\n                            <label>√öltima actualizaci√≥n</label>\n                            <span className=\"info-value\">{formatDate(ticket.updatedAt)}</span>\n                        </div>\n\n                        <div className=\"info-item\">\n                            <label>Cliente</label>\n                            <span className=\"info-value\">{ticket.customerName}</span>\n                        </div>\n                    </div>\n                </section>\n\n                {/* Descripci√≥n */}\n                <section className=\"detail-section\">\n                    <h3 className=\"section-title\">Descripci√≥n</h3>\n                    <div className=\"description-box\">\n                        <p>{ticket.description || 'Sin descripci√≥n'}</p>\n                    </div>\n                </section>\n\n                {/* Notas Internas */}\n                <section className=\"detail-section\">\n                    <div className=\"section-header\">\n                        <h3 className=\"section-title\">Notas Internas</h3>\n                        <button\n                            className=\"btn-add-note\"\n                            onClick={() => setShowNotesForm(!showNotesForm)}\n                        >\n                            + Agregar Nota\n                        </button>\n                    </div>\n\n                    {showNotesForm && (\n                        <div className=\"notes-form\">\n              <textarea\n                  value={notes}\n                  onChange={(e) => setNotes(e.target.value)}\n                  placeholder=\"Escribe una nota interna...\"\n                  rows=\"4\"\n                  className=\"notes-textarea\"\n              />\n                            <div className=\"notes-actions\">\n                                <button\n                                    className=\"btn btn-secondary\"\n                                    onClick={() => {\n                                        setShowNotesForm(false);\n                                        setNotes('');\n                                    }}\n                                >\n                                    Cancelar\n                                </button>\n                                <button\n                                    className=\"btn btn-primary\"\n                                    onClick={handleAddNote}\n                                >\n                                    Guardar Nota\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    <div className=\"notes-list\">\n                        {ticket.notes && ticket.notes.length > 0 ? (\n                            ticket.notes.map((note, index) => (\n                                <div key={index} className=\"note-item\">\n                                    <div className=\"note-header\">\n                                        <strong>{note.author}</strong>\n                                        <span className=\"note-date\">{formatDate(note.date)}</span>\n                                    </div>\n                                    <p className=\"note-content\">{note.content}</p>\n                                </div>\n                            ))\n                        ) : (\n                            <p className=\"empty-notes\">No hay notas internas</p>\n                        )}\n                    </div>\n                </section>\n\n                {/* Historial */}\n                <section className=\"detail-section\">\n                    <h3 className=\"section-title\">Historial</h3>\n                    <div className=\"timeline\">\n                        {ticket.history && ticket.history.map((event, index) => (\n                            <div key={index} className=\"timeline-item\">\n                                <div className=\"timeline-marker\"></div>\n                                <div className=\"timeline-content\">\n                                    <p className=\"timeline-text\">{event.text}</p>\n                                    <span className=\"timeline-date\">{formatDate(event.date)}</span>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </section>\n            </div>\n\n            <div className=\"ticket-detail-footer\">\n                <button className=\"btn btn-secondary\" onClick={onClose}>\n                    Cancelar\n                </button>\n                <button className=\"btn btn-primary\" onClick={handleSave}>\n                    Guardar Cambios\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default TicketDetail;","// frontend/admin-panel/src/components/Tickets/TicketChat.jsx\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../../styles/components/TicketChat.css';\n\nconst TicketChat = ({ ticketId, messages: initialMessages, onSendMessage }) => {\n    const [messages, setMessages] = useState(initialMessages || []);\n    const [newMessage, setNewMessage] = useState('');\n    const [isTyping, setIsTyping] = useState(false);\n    const messagesEndRef = useRef(null);\n    const chatContainerRef = useRef(null);\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    const handleSendMessage = async (e) => {\n        e.preventDefault();\n\n        if (!newMessage.trim()) return;\n\n        const message = {\n            id: Date.now(),\n            text: newMessage,\n            sender: 'agent',\n            senderName: 'T√∫',\n            timestamp: new Date().toISOString(),\n            read: false\n        };\n\n        setMessages([...messages, message]);\n        setNewMessage('');\n\n        try {\n            await onSendMessage?.(ticketId, newMessage);\n        } catch (error) {\n            console.error('Error enviando mensaje:', error);\n        }\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            handleSendMessage(e);\n        }\n    };\n\n    const formatTime = (timestamp) => {\n        return new Date(timestamp).toLocaleTimeString('es-ES', {\n            hour: '2-digit',\n            minute: '2-digit'\n        });\n    };\n\n    const formatDate = (timestamp) => {\n        const date = new Date(timestamp);\n        const today = new Date();\n        const yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n\n        if (date.toDateString() === today.toDateString()) {\n            return 'Hoy';\n        } else if (date.toDateString() === yesterday.toDateString()) {\n            return 'Ayer';\n        } else {\n            return date.toLocaleDateString('es-ES', {\n                day: '2-digit',\n                month: 'short'\n            });\n        }\n    };\n\n    const groupMessagesByDate = (messages) => {\n        const groups = {};\n\n        messages.forEach(message => {\n            const date = formatDate(message.timestamp);\n            if (!groups[date]) {\n                groups[date] = [];\n            }\n            groups[date].push(message);\n        });\n\n        return groups;\n    };\n\n    const messageGroups = groupMessagesByDate(messages);\n\n    return (\n        <div className=\"ticket-chat\">\n            <div className=\"chat-header\">\n                <div className=\"header-info\">\n                    <h3>Chat del Ticket #{ticketId}</h3>\n                    <span className=\"chat-status\">\n            <span className=\"status-dot online\"></span>\n            Cliente en l√≠nea\n          </span>\n                </div>\n                <div className=\"header-actions\">\n                    <button className=\"icon-button\" title=\"Adjuntar archivo\">\n                        üìé\n                    </button>\n                    <button className=\"icon-button\" title=\"Buscar en chat\">\n                        üîç\n                    </button>\n                    <button className=\"icon-button\" title=\"M√°s opciones\">\n                        ‚ãÆ\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"chat-messages\" ref={chatContainerRef}>\n                {Object.entries(messageGroups).map(([date, msgs]) => (\n                    <div key={date}>\n                        <div className=\"date-divider\">\n                            <span>{date}</span>\n                        </div>\n\n                        {msgs.map((message) => (\n                            <div\n                                key={message.id}\n                                className={`message ${message.sender === 'agent' ? 'message-sent' : 'message-received'}`}\n                            >\n                                {message.sender !== 'agent' && (\n                                    <div className=\"message-avatar\">\n                                        <span>{message.senderName?.charAt(0) || 'C'}</span>\n                                    </div>\n                                )}\n\n                                <div className=\"message-content\">\n                                    {message.sender !== 'agent' && (\n                                        <span className=\"message-sender\">{message.senderName}</span>\n                                    )}\n\n                                    <div className=\"message-bubble\">\n                                        <p className=\"message-text\">{message.text}</p>\n\n                                        {message.attachments && message.attachments.length > 0 && (\n                                            <div className=\"message-attachments\">\n                                                {message.attachments.map((attachment, idx) => (\n                                                    <div key={idx} className=\"attachment\">\n                                                        üìé {attachment.name}\n                                                    </div>\n                                                ))}\n                                            </div>\n                                        )}\n                                    </div>\n\n                                    <div className=\"message-footer\">\n                                        <span className=\"message-time\">{formatTime(message.timestamp)}</span>\n                                        {message.sender === 'agent' && (\n                                            <span className=\"message-status\">\n                        {message.read ? '‚úì‚úì' : '‚úì'}\n                      </span>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n\n                {isTyping && (\n                    <div className=\"message message-received\">\n                        <div className=\"message-avatar\">\n                            <span>C</span>\n                        </div>\n                        <div className=\"typing-indicator\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </div>\n                    </div>\n                )}\n\n                <div ref={messagesEndRef} />\n            </div>\n\n            <form className=\"chat-input\" onSubmit={handleSendMessage}>\n                <button type=\"button\" className=\"input-button\" title=\"Emoji\">\n                    üòä\n                </button>\n\n                <textarea\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                    onKeyPress={handleKeyPress}\n                    placeholder=\"Escribe un mensaje...\"\n                    className=\"message-textarea\"\n                    rows=\"1\"\n                />\n\n                <button type=\"button\" className=\"input-button\" title=\"Adjuntar\">\n                    üìé\n                </button>\n\n                <button\n                    type=\"submit\"\n                    className=\"send-button\"\n                    disabled={!newMessage.trim()}\n                >\n                    ‚û§\n                </button>\n            </form>\n\n            <div className=\"chat-info\">\n        <span className=\"info-text\">\n          üí° Presiona Enter para enviar, Shift+Enter para nueva l√≠nea\n        </span>\n            </div>\n        </div>\n    );\n};\n\nexport default TicketChat;","// frontend/admin-panel/src/components/Tickets/TicketFilters.jsx\nimport React, { useState } from 'react';\nimport '../../styles/components/TicketFilters.css';\n\nconst TicketFilters = ({ filters, onFilterChange, onReset }) => {\n    const [isExpanded, setIsExpanded] = useState(true);\n\n    const statusOptions = [\n        { value: 'all', label: 'Todos', count: 245 },\n        { value: 'open', label: 'Abiertos', count: 45 },\n        { value: 'in_progress', label: 'En Progreso', count: 30 },\n        { value: 'waiting', label: 'Esperando', count: 15 },\n        { value: 'resolved', label: 'Resueltos', count: 80 },\n        { value: 'closed', label: 'Cerrados', count: 75 }\n    ];\n\n    const priorityOptions = [\n        { value: 'all', label: 'Todas', color: '#9e9e9e' },\n        { value: 'low', label: 'Baja', color: '#4CAF50' },\n        { value: 'medium', label: 'Media', color: '#FF9800' },\n        { value: 'high', label: 'Alta', color: '#F44336' },\n        { value: 'urgent', label: 'Urgente', color: '#9C27B0' }\n    ];\n\n    const categoryOptions = [\n        { value: 'all', label: 'Todas' },\n        { value: 'general', label: 'General' },\n        { value: 'technical', label: 'T√©cnico' },\n        { value: 'account', label: 'Cuenta' },\n        { value: 'transaction', label: 'Transacciones' },\n        { value: 'loan', label: 'Pr√©stamos' },\n        { value: 'card', label: 'Tarjetas' },\n        { value: 'complaint', label: 'Reclamo' }\n    ];\n\n    const agents = [\n        { id: 'all', name: 'Todos los agentes' },\n        { id: '1', name: 'Juan P√©rez' },\n        { id: '2', name: 'Mar√≠a Garc√≠a' },\n        { id: '3', name: 'Carlos L√≥pez' },\n        { id: '4', name: 'Ana Mart√≠nez' },\n        { id: 'unassigned', name: 'Sin asignar' }\n    ];\n\n    const handleFilterChange = (filterType, value) => {\n        onFilterChange?.({\n            ...filters,\n            [filterType]: value\n        });\n    };\n\n    const hasActiveFilters = () => {\n        return Object.values(filters).some(value => value !== 'all' && value !== '');\n    };\n\n    return (\n        <div className={`ticket-filters ${isExpanded ? 'expanded' : 'collapsed'}`}>\n            <div className=\"filters-header\">\n                <div className=\"header-left\">\n                    <h3>Filtros</h3>\n                    {hasActiveFilters() && (\n                        <span className=\"active-filters-badge\">\n              {Object.values(filters).filter(v => v !== 'all' && v !== '').length}\n            </span>\n                    )}\n                </div>\n\n                <div className=\"header-right\">\n                    {hasActiveFilters() && (\n                        <button className=\"clear-filters-btn\" onClick={onReset}>\n                            Limpiar\n                        </button>\n                    )}\n                    <button\n                        className=\"toggle-filters-btn\"\n                        onClick={() => setIsExpanded(!isExpanded)}\n                    >\n                        {isExpanded ? '‚ñº' : '‚ñ∂'}\n                    </button>\n                </div>\n            </div>\n\n            {isExpanded && (\n                <div className=\"filters-content\">\n                    {/* B√∫squeda */}\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\">Buscar</label>\n                        <div className=\"search-input-wrapper\">\n                            <span className=\"search-icon\">üîç</span>\n                            <input\n                                type=\"text\"\n                                placeholder=\"ID, cliente, descripci√≥n...\"\n                                value={filters.search || ''}\n                                onChange={(e) => handleFilterChange('search', e.target.value)}\n                                className=\"filter-search-input\"\n                            />\n                        </div>\n                    </div>\n\n                    {/* Estado */}\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\">Estado</label>\n                        <div className=\"filter-options\">\n                            {statusOptions.map(option => (\n                                <button\n                                    key={option.value}\n                                    className={`filter-option ${filters.status === option.value ? 'active' : ''}`}\n                                    onClick={() => handleFilterChange('status', option.value)}\n                                >\n                                    <span className=\"option-label\">{option.label}</span>\n                                    <span className=\"option-count\">{option.count}</span>\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n\n                    {/* Prioridad */}\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\">Prioridad</label>\n                        <div className=\"priority-filters\">\n                            {priorityOptions.map(option => (\n                                <button\n                                    key={option.value}\n                                    className={`priority-option ${filters.priority === option.value ? 'active' : ''}`}\n                                    onClick={() => handleFilterChange('priority', option.value)}\n                                >\n                  <span\n                      className=\"priority-indicator\"\n                      style={{ background: option.color }}\n                  ></span>\n                                    {option.label}\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n\n                    {/* Categor√≠a */}\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\">Categor√≠a</label>\n                        <select\n                            value={filters.category || 'all'}\n                            onChange={(e) => handleFilterChange('category', e.target.value)}\n                            className=\"filter-select\"\n                        >\n                            {categoryOptions.map(option => (\n                                <option key={option.value} value={option.value}>\n                                    {option.label}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    {/* Agente Asignado */}\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\">Asignado a</label>\n                        <select\n                            value={filters.assignedTo || 'all'}\n                            onChange={(e) => handleFilterChange('assignedTo', e.target.value)}\n                            className=\"filter-select\"\n                        >\n                            {agents.map(agent => (\n                                <option key={agent.id} value={agent.id}>\n                                    {agent.name}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    {/* Rango de Fechas */}\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\">Fecha de creaci√≥n</label>\n                        <div className=\"date-range\">\n                            <input\n                                type=\"date\"\n                                value={filters.dateFrom || ''}\n                                onChange={(e) => handleFilterChange('dateFrom', e.target.value)}\n                                className=\"date-input\"\n                                placeholder=\"Desde\"\n                            />\n                            <span className=\"date-separator\">‚Äî</span>\n                            <input\n                                type=\"date\"\n                                value={filters.dateTo || ''}\n                                onChange={(e) => handleFilterChange('dateTo', e.target.value)}\n                                className=\"date-input\"\n                                placeholder=\"Hasta\"\n                            />\n                        </div>\n                    </div>\n\n                    {/* Ordenar por */}\n                    <div className=\"filter-group\">\n                        <label className=\"filter-label\">Ordenar por</label>\n                        <select\n                            value={filters.sortBy || 'newest'}\n                            onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n                            className=\"filter-select\"\n                        >\n                            <option value=\"newest\">M√°s recientes</option>\n                            <option value=\"oldest\">M√°s antiguos</option>\n                            <option value=\"priority\">Prioridad</option>\n                            <option value=\"status\">Estado</option>\n                            <option value=\"updated\">√öltima actualizaci√≥n</option>\n                        </select>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TicketFilters;","// frontend/admin-panel/src/components/Common/LoadingSpinner.jsx\nimport React from 'react';\nimport '../../styles/components/LoadingSpinner.css';\n\nconst LoadingSpinner = ({ size = 'medium', message = '', fullScreen = false }) => {\n    const sizeClasses = {\n        small: 'spinner-small',\n        medium: 'spinner-medium',\n        large: 'spinner-large'\n    };\n\n    const spinner = (\n        <div className={`loading-spinner ${sizeClasses[size]}`}>\n            <div className=\"spinner-circle\">\n                <div className=\"spinner-inner\"></div>\n            </div>\n            {message && <p className=\"spinner-message\">{message}</p>}\n        </div>\n    );\n\n    if (fullScreen) {\n        return (\n            <div className=\"loading-overlay\">\n                {spinner}\n            </div>\n        );\n    }\n\n    return spinner;\n};\n\nexport default LoadingSpinner;","// frontend/admin-panel/src/services/ticketService.js\nimport api from './api';\n\nclass TicketService {\n    // Get all tickets with filters\n    async getTickets(filters = {}) {\n        try {\n            const queryParams = new URLSearchParams();\n\n            Object.keys(filters).forEach(key => {\n                if (filters[key] && filters[key] !== 'all') {\n                    queryParams.append(key, filters[key]);\n                }\n            });\n\n            const queryString = queryParams.toString();\n            const endpoint = queryString ? `/tickets?${queryString}` : '/tickets';\n\n            return await api.get(endpoint);\n        } catch (error) {\n            console.error('Error fetching tickets:', error);\n            throw error;\n        }\n    }\n\n    // Get ticket by ID\n    async getTicketById(ticketId) {\n        try {\n            return await api.get(`/tickets/${ticketId}`);\n        } catch (error) {\n            console.error('Error fetching ticket:', error);\n            throw error;\n        }\n    }\n\n    // Create new ticket\n    async createTicket(ticketData) {\n        try {\n            return await api.post('/tickets', ticketData);\n        } catch (error) {\n            console.error('Error creating ticket:', error);\n            throw error;\n        }\n    }\n\n    // Update ticket\n    async updateTicket(ticketId, ticketData) {\n        try {\n            return await api.put(`/tickets/${ticketId}`, ticketData);\n        } catch (error) {\n            console.error('Error updating ticket:', error);\n            throw error;\n        }\n    }\n\n    // Delete ticket\n    async deleteTicket(ticketId) {\n        try {\n            return await api.delete(`/tickets/${ticketId}`);\n        } catch (error) {\n            console.error('Error deleting ticket:', error);\n            throw error;\n        }\n    }\n\n    // Assign ticket to agent\n    async assignTicket(ticketId, agentId) {\n        try {\n            return await api.post(`/tickets/${ticketId}/assign`, { agentId });\n        } catch (error) {\n            console.error('Error assigning ticket:', error);\n            throw error;\n        }\n    }\n\n    // Change ticket status\n    async changeStatus(ticketId, status) {\n        try {\n            return await api.patch(`/tickets/${ticketId}/status`, { status });\n        } catch (error) {\n            console.error('Error changing ticket status:', error);\n            throw error;\n        }\n    }\n\n    // Change ticket priority\n    async changePriority(ticketId, priority) {\n        try {\n            return await api.patch(`/tickets/${ticketId}/priority`, { priority });\n        } catch (error) {\n            console.error('Error changing ticket priority:', error);\n            throw error;\n        }\n    }\n\n    // Get ticket messages\n    async getMessages(ticketId) {\n        try {\n            return await api.get(`/tickets/${ticketId}/messages`);\n        } catch (error) {\n            console.error('Error fetching messages:', error);\n            throw error;\n        }\n    }\n\n    // Send message to ticket\n    async sendMessage(ticketId, message) {\n        try {\n            return await api.post(`/tickets/${ticketId}/messages`, { message });\n        } catch (error) {\n            console.error('Error sending message:', error);\n            throw error;\n        }\n    }\n\n    // Add note to ticket\n    async addNote(ticketId, note) {\n        try {\n            return await api.post(`/tickets/${ticketId}/notes`, { note });\n        } catch (error) {\n            console.error('Error adding note:', error);\n            throw error;\n        }\n    }\n\n    // Get ticket history\n    async getHistory(ticketId) {\n        try {\n            return await api.get(`/tickets/${ticketId}/history`);\n        } catch (error) {\n            console.error('Error fetching ticket history:', error);\n            throw error;\n        }\n    }\n\n    // Upload attachment\n    async uploadAttachment(ticketId, file) {\n        try {\n            return await api.upload(`/tickets/${ticketId}/attachments`, file);\n        } catch (error) {\n            console.error('Error uploading attachment:', error);\n            throw error;\n        }\n    }\n\n    // Get ticket statistics\n    async getStatistics(period = 'week') {\n        try {\n            return await api.get(`/tickets/statistics?period=${period}`);\n        } catch (error) {\n            console.error('Error fetching statistics:', error);\n            throw error;\n        }\n    }\n\n    // Export tickets\n    async exportTickets(filters = {}, format = 'csv') {\n        try {\n            const queryParams = new URLSearchParams({\n                ...filters,\n                format\n            });\n\n            return await api.get(`/tickets/export?${queryParams.toString()}`);\n        } catch (error) {\n            console.error('Error exporting tickets:', error);\n            throw error;\n        }\n    }\n}\n\nexport default new TicketService();","import React, { useState, useEffect } from 'react';\nimport TicketDetail from '../components/Tickets/TicketDetail';\nimport TicketChat from '../components/Tickets/TicketChat';\nimport TicketFilters from '../components/Tickets/TicketFilters';\nimport LoadingSpinner from '../components/Common/LoadingSpinner';\nimport ticketService from '../services/ticketService';\nimport '../styles/pages/TicketsPage.css';\n\n// Componente TicketList interno\nconst TicketList = ({ tickets, selectedTicket, onSelectTicket }) => {\n    if (!tickets || tickets.length === 0) {\n        return (\n            <div className=\"no-tickets\">\n                <div className=\"empty-icon\">üìã</div>\n                <h3>No hay tickets</h3>\n                <p>No se encontraron tickets con los filtros seleccionados</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"tickets-list\">\n            {tickets.map(ticket => (\n                <div\n                    key={ticket.id}\n                    className={`ticket-card ${selectedTicket?.id === ticket.id ? 'selected' : ''}`}\n                    onClick={() => onSelectTicket(ticket)}\n                >\n                    <div className=\"ticket-header\">\n                        <h3 className=\"ticket-subject\">{ticket.subject}</h3>\n                        <span className={`status-badge status-${ticket.status}`}>\n                            {ticket.status}\n                        </span>\n                    </div>\n\n                    <div className=\"ticket-meta\">\n                        <span className={`priority-badge priority-${ticket.priority}`}>\n                            {ticket.priority === 'high' && 'üî¥'}\n                            {ticket.priority === 'medium' && 'üü°'}\n                            {ticket.priority === 'low' && 'üü¢'}\n                            {ticket.priority}\n                        </span>\n\n                        {ticket.category && (\n                            <span className=\"category-tag\">{ticket.category}</span>\n                        )}\n                    </div>\n\n                    {ticket.lastMessage && (\n                        <p className=\"ticket-preview\">{ticket.lastMessage}</p>\n                    )}\n\n                    <div className=\"ticket-footer\">\n                        <span className=\"ticket-date\">\n                            {new Date(ticket.createdAt || Date.now()).toLocaleDateString()}\n                        </span>\n                        {ticket.assignedTo && (\n                            <span className=\"ticket-agent\">üë§ {ticket.assignedTo}</span>\n                        )}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nconst TicketsPage = () => {\n    const [tickets, setTickets] = useState([]);\n    const [selectedTicket, setSelectedTicket] = useState(null);\n    const [view, setView] = useState('detail'); // 'detail' o 'chat'\n    const [isLoading, setIsLoading] = useState(true);\n    const [filters, setFilters] = useState({\n        status: 'all',\n        priority: 'all',\n        category: 'all',\n        assignedTo: 'all',\n        search: '',\n        dateFrom: '',\n        dateTo: '',\n        sortBy: 'newest'\n    });\n\n    useEffect(() => {\n        loadTickets();\n    }, [filters]);\n\n    const loadTickets = async () => {\n        setIsLoading(true);\n        try {\n            const response = await ticketService.getTickets(filters);\n            setTickets(response.tickets || []);\n        } catch (error) {\n            console.error('Error cargando tickets:', error);\n            // En caso de error, usar datos mock para desarrollo\n            setTickets([\n                {\n                    id: 1,\n                    subject: \"Consulta de saldo\",\n                    status: \"open\",\n                    priority: \"medium\",\n                    category: \"Consultas\",\n                    createdAt: new Date().toISOString(),\n                    lastMessage: \"El cliente pregunta por su saldo disponible\",\n                    assignedTo: \"Agent 1\"\n                },\n                {\n                    id: 2,\n                    subject: \"Transferencia fallida\",\n                    status: \"pending\",\n                    priority: \"high\",\n                    category: \"Transacciones\",\n                    createdAt: new Date().toISOString(),\n                    lastMessage: \"Error al procesar transferencia internacional\",\n                    assignedTo: \"Agent 2\"\n                },\n                {\n                    id: 3,\n                    subject: \"Actualizaci√≥n de datos\",\n                    status: \"resolved\",\n                    priority: \"low\",\n                    category: \"Perfil\",\n                    createdAt: new Date().toISOString(),\n                    lastMessage: \"Cliente solicita cambio de direcci√≥n\",\n                    assignedTo: \"Agent 1\"\n                }\n            ]);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleSelectTicket = (ticket) => {\n        setSelectedTicket(ticket);\n        setView('detail');\n    };\n\n    const handleUpdateTicket = async (ticketData) => {\n        try {\n            await ticketService.updateTicket(ticketData.id, ticketData);\n            // Actualizar la lista de tickets\n            setTickets(tickets.map(t =>\n                t.id === ticketData.id ? { ...t, ...ticketData } : t\n            ));\n            setSelectedTicket({ ...selectedTicket, ...ticketData });\n        } catch (error) {\n            console.error('Error actualizando ticket:', error);\n            throw error;\n        }\n    };\n\n    const handleCloseDetail = () => {\n        setSelectedTicket(null);\n        setView('detail');\n    };\n\n    const handleFilterChange = (newFilters) => {\n        setFilters(newFilters);\n    };\n\n    const handleResetFilters = () => {\n        setFilters({\n            status: 'all',\n            priority: 'all',\n            category: 'all',\n            assignedTo: 'all',\n            search: '',\n            dateFrom: '',\n            dateTo: '',\n            sortBy: 'newest'\n        });\n    };\n\n    const handleSendMessage = async (ticketId, message) => {\n        try {\n            await ticketService.sendMessage(ticketId, message);\n        } catch (error) {\n            console.error('Error enviando mensaje:', error);\n            throw error;\n        }\n    };\n\n    return (\n        <div className=\"tickets-page\">\n            <div className=\"page-header\">\n                <div className=\"header-left\">\n                    <h1>Tickets</h1>\n                    <p className=\"page-subtitle\">Gesti√≥n de tickets de soporte</p>\n                </div>\n                <div className=\"header-right\">\n                    <button className=\"btn-secondary\">\n                        Estad√≠sticas\n                    </button>\n                    <button className=\"btn-primary\">\n                        + Crear Ticket\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"tickets-content\">\n                {/* Filters Sidebar */}\n                <div className=\"tickets-sidebar\">\n                    <TicketFilters\n                        filters={filters}\n                        onFilterChange={handleFilterChange}\n                        onReset={handleResetFilters}\n                    />\n                </div>\n\n                {/* Tickets List */}\n                <div className=\"tickets-list-container\">\n                    {isLoading ? (\n                        <LoadingSpinner size=\"medium\" message=\"Cargando tickets...\" />\n                    ) : (\n                        <TicketList\n                            tickets={tickets}\n                            selectedTicket={selectedTicket}\n                            onSelectTicket={handleSelectTicket}\n                        />\n                    )}\n                </div>\n\n                {/* Ticket Detail/Chat */}\n                <div className=\"tickets-detail-container\">\n                    {selectedTicket ? (\n                        <>\n                            <div className=\"detail-tabs\">\n                                <button\n                                    className={`tab ${view === 'detail' ? 'active' : ''}`}\n                                    onClick={() => setView('detail')}\n                                >\n                                    Detalles\n                                </button>\n                                <button\n                                    className={`tab ${view === 'chat' ? 'active' : ''}`}\n                                    onClick={() => setView('chat')}\n                                >\n                                    Chat\n                                </button>\n                            </div>\n\n                            {view === 'detail' ? (\n                                <TicketDetail\n                                    ticket={selectedTicket}\n                                    onUpdate={handleUpdateTicket}\n                                    onClose={handleCloseDetail}\n                                />\n                            ) : (\n                                <TicketChat\n                                    ticketId={selectedTicket.id}\n                                    messages={selectedTicket.messages || []}\n                                    onSendMessage={handleSendMessage}\n                                />\n                            )}\n                        </>\n                    ) : (\n                        <div className=\"no-ticket-selected\">\n                            <div className=\"empty-icon\">üé´</div>\n                            <h3>Selecciona un ticket</h3>\n                            <p>Elige un ticket de la lista para ver sus detalles</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TicketsPage;\n","// frontend/admin-panel/src/pages/ConversationsPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport LoadingSpinner from '../components/Common/LoadingSpinner';\nimport '../styles/pages/ConversationPage.css';\n\nconst ConversationsPage = () => {\n    const [conversations, setConversations] = useState([]);\n    const [selectedConversation, setSelectedConversation] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [filter, setFilter] = useState('all');\n    const [searchTerm, setSearchTerm] = useState('');\n\n    useEffect(() => {\n        loadConversations();\n    }, [filter]);\n\n    const loadConversations = async () => {\n        setIsLoading(true);\n        try {\n            await new Promise(resolve => setTimeout(resolve, 800));\n\n            const mockConversations = [\n                {\n                    id: 1,\n                    customerName: 'Juan P√©rez',\n                    status: 'active',\n                    lastMessage: 'Necesito ayuda con mi cuenta, no puedo acceder',\n                    timestamp: new Date().toISOString(),\n                    unreadCount: 2,\n                    avatar: null,\n                    priority: 'high',\n                    channel: 'whatsapp'\n                },\n                {\n                    id: 2,\n                    customerName: 'Mar√≠a Garc√≠a',\n                    status: 'waiting',\n                    lastMessage: 'Gracias por la informaci√≥n, fue muy √∫til',\n                    timestamp: new Date(Date.now() - 3600000).toISOString(),\n                    unreadCount: 0,\n                    avatar: null,\n                    priority: 'medium',\n                    channel: 'web'\n                },\n                {\n                    id: 3,\n                    customerName: 'Carlos L√≥pez',\n                    status: 'active',\n                    lastMessage: '¬øPueden ayudarme con una transferencia?',\n                    timestamp: new Date(Date.now() - 1800000).toISOString(),\n                    unreadCount: 1,\n                    avatar: null,\n                    priority: 'high',\n                    channel: 'phone'\n                },\n                {\n                    id: 4,\n                    customerName: 'Ana Mart√≠nez',\n                    status: 'closed',\n                    lastMessage: 'Problema resuelto, muchas gracias',\n                    timestamp: new Date(Date.now() - 7200000).toISOString(),\n                    unreadCount: 0,\n                    avatar: null,\n                    priority: 'low',\n                    channel: 'email'\n                }\n            ];\n\n            setConversations(mockConversations);\n        } catch (error) {\n            console.error('Error cargando conversaciones:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const filterOptions = [\n        { value: 'all', label: 'Todas', count: 48, icon: 'üí¨', color: '#667eea' },\n        { value: 'active', label: 'Activas', count: 12, icon: 'üü¢', color: '#43e97b' },\n        { value: 'waiting', label: 'En Espera', count: 8, icon: 'üü°', color: '#feca57' },\n        { value: 'closed', label: 'Cerradas', count: 25, icon: '‚ö´', color: '#95a5a6' }\n    ];\n\n    const getStatusColor = (status) => {\n        switch(status) {\n            case 'active': return '#43e97b';\n            case 'waiting': return '#feca57';\n            case 'closed': return '#95a5a6';\n            default: return '#667eea';\n        }\n    };\n\n    const getChannelIcon = (channel) => {\n        switch(channel) {\n            case 'whatsapp': return 'üíö';\n            case 'web': return 'üåê';\n            case 'phone': return 'üìû';\n            case 'email': return 'üìß';\n            default: return 'üí¨';\n        }\n    };\n\n    const getPriorityColor = (priority) => {\n        switch(priority) {\n            case 'high': return '#ff6b6b';\n            case 'medium': return '#feca57';\n            case 'low': return '#48dbfb';\n            default: return '#95a5a6';\n        }\n    };\n\n    const filteredConversations = conversations.filter(conv => {\n        if (filter === 'all') return true;\n        return conv.status === filter;\n    });\n\n    if (isLoading) {\n        return (\n            <div className=\"conversations-page\">\n                <LoadingSpinner size=\"large\" message=\"Cargando conversaciones...\" />\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"conversations-page\">\n            {/* Header Modernizado */}\n            <div className=\"conversations-header\">\n                <div className=\"header-content\">\n                    <h1>üí¨ Conversaciones</h1>\n                    <p className=\"page-subtitle\">Gestiona todas las conversaciones en tiempo real con tu equipo</p>\n                </div>\n                <div className=\"header-actions\">\n                    <div className=\"search-container\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"üîç Buscar conversaciones...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                            className=\"search-input\"\n                        />\n                    </div>\n                    <button className=\"btn-secondary refresh-btn\">\n                        <span className=\"btn-icon\">üîÑ</span>\n                        Actualizar\n                    </button>\n                    <button className=\"btn-primary new-conversation-btn\">\n                        <span className=\"btn-icon\">‚ûï</span>\n                        Nueva Conversaci√≥n\n                    </button>\n                </div>\n            </div>\n\n            {/* Filtros Modernizados */}\n            <div className=\"conversations-filters\">\n                {filterOptions.map(option => (\n                    <button\n                        key={option.value}\n                        className={`filter-card ${filter === option.value ? 'active' : ''}`}\n                        onClick={() => setFilter(option.value)}\n                        style={{ '--filter-color': option.color }}\n                    >\n                        <div className=\"filter-icon\">{option.icon}</div>\n                        <div className=\"filter-content\">\n                            <span className=\"filter-label\">{option.label}</span>\n                            <span className=\"filter-count\">{option.count}</span>\n                        </div>\n                        <div className=\"filter-indicator\"></div>\n                    </button>\n                ))}\n            </div>\n\n            <div className=\"conversations-content\">\n                {/* Lista de Conversaciones Modernizada */}\n                <div className=\"conversations-list-container\">\n                    <div className=\"list-header\">\n                        <h3>Conversaciones Recientes</h3>\n                        <span className=\"total-count\">{filteredConversations.length} conversaciones</span>\n                    </div>\n                    <div className=\"conversations-list\">\n                        {filteredConversations.map(conversation => (\n                            <div\n                                key={conversation.id}\n                                className={`conversation-card ${selectedConversation?.id === conversation.id ? 'selected' : ''}`}\n                                onClick={() => setSelectedConversation(conversation)}\n                            >\n                                <div className=\"card-header\">\n                                    <div className=\"customer-info\">\n                                        <div className=\"avatar-container\">\n                                            <div\n                                                className=\"conversation-avatar\"\n                                                style={{\n                                                    background: `linear-gradient(135deg, ${getStatusColor(conversation.status)}, ${getPriorityColor(conversation.priority)})`\n                                                }}\n                                            >\n                                                {conversation.customerName.charAt(0)}\n                                            </div>\n                                            <div\n                                                className=\"status-indicator\"\n                                                style={{ backgroundColor: getStatusColor(conversation.status) }}\n                                            ></div>\n                                        </div>\n                                        <div className=\"customer-details\">\n                                            <h4 className=\"customer-name\">{conversation.customerName}</h4>\n                                            <div className=\"conversation-meta\">\n                                                <span className=\"channel\">{getChannelIcon(conversation.channel)}</span>\n                                                <span\n                                                    className=\"priority-badge\"\n                                                    style={{ backgroundColor: getPriorityColor(conversation.priority) }}\n                                                >\n                                                    {conversation.priority}\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"conversation-time\">\n                                        {new Date(conversation.timestamp).toLocaleTimeString('es-ES', {\n                                            hour: '2-digit',\n                                            minute: '2-digit'\n                                        })}\n                                    </div>\n                                </div>\n\n                                <div className=\"card-body\">\n                                    <p className=\"last-message\">{conversation.lastMessage}</p>\n                                </div>\n\n                                <div className=\"card-footer\">\n                                    {conversation.unreadCount > 0 && (\n                                        <span className=\"unread-badge\">{conversation.unreadCount} no le√≠dos</span>\n                                    )}\n                                    <div className=\"action-buttons\">\n                                        <button className=\"action-btn\">üí¨</button>\n                                        <button className=\"action-btn\">üìã</button>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Panel de Detalles Modernizado */}\n                <div className=\"conversation-detail-panel\">\n                    {selectedConversation ? (\n                        <div className=\"chat-container\">\n                            <div className=\"chat-header\">\n                                <div className=\"chat-customer-info\">\n                                    <div\n                                        className=\"customer-avatar-large\"\n                                        style={{\n                                            background: `linear-gradient(135deg, ${getStatusColor(selectedConversation.status)}, ${getPriorityColor(selectedConversation.priority)})`\n                                        }}\n                                    >\n                                        {selectedConversation.customerName.charAt(0)}\n                                    </div>\n                                    <div className=\"customer-details\">\n                                        <h3>{selectedConversation.customerName}</h3>\n                                        <div className=\"customer-status\">\n                                            <span\n                                                className=\"status-badge\"\n                                                style={{ backgroundColor: getStatusColor(selectedConversation.status) }}\n                                            >\n                                                {selectedConversation.status}\n                                            </span>\n                                            <span className=\"channel-info\">\n                                                {getChannelIcon(selectedConversation.channel)} {selectedConversation.channel}\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"chat-actions\">\n                                    <button className=\"chat-action-btn\">üìû</button>\n                                    <button className=\"chat-action-btn\">üìß</button>\n                                    <button className=\"chat-action-btn\">üîî</button>\n                                    <button className=\"chat-action-btn\">‚ãÆ</button>\n                                </div>\n                            </div>\n\n                            <div className=\"chat-messages\">\n                                <div className=\"empty-chat-state\">\n                                    <div className=\"empty-icon\">üí¨</div>\n                                    <h3>Inicia la conversaci√≥n</h3>\n                                    <p>Env√≠a un mensaje para comenzar a chatear con {selectedConversation.customerName}</p>\n                                    <button className=\"start-chat-btn\">\n                                        ‚ú® Comenzar Conversaci√≥n\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div className=\"chat-input-container\">\n                                <div className=\"input-actions\">\n                                    <button className=\"input-action-btn\">üòä</button>\n                                    <button className=\"input-action-btn\">üìé</button>\n                                    <button className=\"input-action-btn\">üñºÔ∏è</button>\n                                </div>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Escribe tu mensaje...\"\n                                    className=\"chat-input\"\n                                />\n                                <button className=\"send-btn\">\n                                    ‚û§\n                                </button>\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"no-conversation-selected\">\n                            <div className=\"empty-state\">\n                                <div className=\"empty-icon\">üí¨</div>\n                                <h3>Selecciona una conversaci√≥n</h3>\n                                <p>Elige una conversaci√≥n de la lista para ver los detalles y chatear</p>\n                                <div className=\"empty-actions\">\n                                    <button className=\"btn-primary\">\n                                        ‚ûï Crear Nueva Conversaci√≥n\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConversationsPage;\n","// frontend/admin-panel/src/components/Analytics/AnalyticsDashboard.jsx\nimport React, { useState } from 'react';\nimport '../../styles/components/AnalyticsDashboard.css';\n\nconst AnalyticsDashboard = () => {\n    const [period, setPeriod] = useState('week');\n    const [selectedMetric, setSelectedMetric] = useState('conversations');\n\n    const metrics = {\n        overview: [\n            { label: 'Total Conversaciones', value: '2,458', change: '+12.5%', trend: 'up', icon: 'üí¨' },\n            { label: 'Tiempo Prom. Respuesta', value: '2.3 min', change: '-8.2%', trend: 'down', icon: '‚è±Ô∏è' },\n            { label: 'Tasa de Resoluci√≥n', value: '89.4%', change: '+5.1%', trend: 'up', icon: '‚úÖ' },\n            { label: 'Satisfacci√≥n Cliente', value: '4.6/5', change: '+0.3', trend: 'up', icon: '‚≠ê' }\n        ],\n        channels: [\n            { name: 'Web Widget', value: 1245, percentage: 50.6, color: '#667eea' },\n            { name: 'WhatsApp', value: 734, percentage: 29.9, color: '#25D366' },\n            { name: 'Email', value: 321, percentage: 13.1, color: '#EA4335' },\n            { name: 'Tel√©fono', value: 158, percentage: 6.4, color: '#4285F4' }\n        ],\n        topIssues: [\n            { issue: 'Consulta de saldo', count: 456, percentage: 18.5, trend: 'up' },\n            { issue: 'Problemas de acceso', count: 342, percentage: 13.9, trend: 'down' },\n            { issue: 'Transferencias', count: 298, percentage: 12.1, trend: 'up' },\n            { issue: 'Tarjetas bloqueadas', count: 234, percentage: 9.5, trend: 'stable' },\n            { issue: 'Solicitud de pr√©stamo', count: 187, percentage: 7.6, trend: 'up' }\n        ],\n        responseTime: {\n            labels: ['00:00', '04:00', '08:00', '12:00', '16:00', '20:00'],\n            data: [3.2, 2.8, 1.9, 2.5, 3.1, 2.7]\n        }\n    };\n\n    const getTrendIcon = (trend) => {\n        if (trend === 'up') return '‚Üó';\n        if (trend === 'down') return '‚Üò';\n        return '‚Üí';\n    };\n\n    const getTrendClass = (trend) => {\n        if (trend === 'up') return 'trend-up';\n        if (trend === 'down') return 'trend-down';\n        return 'trend-stable';\n    };\n\n    return (\n        <div className=\"analytics-dashboard\">\n            {/* Header con selector de per√≠odo */}\n            <div className=\"analytics-header\">\n                <div className=\"header-left\">\n                    <h2>Analytics</h2>\n                    <p className=\"subtitle\">An√°lisis detallado del rendimiento</p>\n                </div>\n                <div className=\"period-selector\">\n                    <button\n                        className={`period-btn ${period === 'day' ? 'active' : ''}`}\n                        onClick={() => setPeriod('day')}\n                    >\n                        Hoy\n                    </button>\n                    <button\n                        className={`period-btn ${period === 'week' ? 'active' : ''}`}\n                        onClick={() => setPeriod('week')}\n                    >\n                        Semana\n                    </button>\n                    <button\n                        className={`period-btn ${period === 'month' ? 'active' : ''}`}\n                        onClick={() => setPeriod('month')}\n                    >\n                        Mes\n                    </button>\n                    <button\n                        className={`period-btn ${period === 'year' ? 'active' : ''}`}\n                        onClick={() => setPeriod('year')}\n                    >\n                        A√±o\n                    </button>\n                    <button className=\"period-btn custom\">\n                        üìÖ Personalizado\n                    </button>\n                </div>\n            </div>\n\n            {/* M√©tricas Overview */}\n            <div className=\"metrics-overview\">\n                {metrics.overview.map((metric, index) => (\n                    <div key={index} className=\"overview-card\">\n                        <div className=\"card-icon\">{metric.icon}</div>\n                        <div className=\"card-content\">\n                            <span className=\"card-label\">{metric.label}</span>\n                            <h3 className=\"card-value\">{metric.value}</h3>\n                            <span className={`card-change ${getTrendClass(metric.trend)}`}>\n                {getTrendIcon(metric.trend)} {metric.change}\n              </span>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* Secci√≥n de Gr√°ficas */}\n            <div className=\"analytics-grid\">\n\n                {/* Tiempo de Respuesta */}\n                <div className=\"analytics-card full-width\">\n                    <div className=\"card-header\">\n                        <h3>Tiempo de Respuesta Promedio</h3>\n                        <div className=\"card-actions\">\n                            <button className=\"icon-btn\">üìä</button>\n                            <button className=\"icon-btn\">‚ãÆ</button>\n                        </div>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"line-chart\">\n                            {metrics.responseTime.data.map((value, index) => {\n                                const maxValue = Math.max(...metrics.responseTime.data);\n                                const height = (value / maxValue) * 100;\n\n                                return (\n                                    <div key={index} className=\"chart-column\">\n                                        <div className=\"chart-tooltip\">{value} min</div>\n                                        <div\n                                            className=\"chart-bar\"\n                                            style={{ height: `${height}%` }}\n                                        ></div>\n                                        <span className=\"chart-label\">{metrics.responseTime.labels[index]}</span>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n\n                {/* Canales de Comunicaci√≥n */}\n                <div className=\"analytics-card\">\n                    <div className=\"card-header\">\n                        <h3>Canales de Comunicaci√≥n</h3>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"channels-chart\">\n                            {metrics.channels.map((channel, index) => (\n                                <div key={index} className=\"channel-item\">\n                                    <div className=\"channel-info\">\n                                        <div\n                                            className=\"channel-indicator\"\n                                            style={{ background: channel.color }}\n                                        ></div>\n                                        <span className=\"channel-name\">{channel.name}</span>\n                                    </div>\n                                    <div className=\"channel-stats\">\n                                        <span className=\"channel-value\">{channel.value}</span>\n                                        <span className=\"channel-percentage\">{channel.percentage}%</span>\n                                    </div>\n                                    <div className=\"channel-bar-container\">\n                                        <div\n                                            className=\"channel-bar\"\n                                            style={{\n                                                width: `${channel.percentage}%`,\n                                                background: channel.color\n                                            }}\n                                        ></div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n\n                {/* Top Issues */}\n                <div className=\"analytics-card\">\n                    <div className=\"card-header\">\n                        <h3>Principales Problemas</h3>\n                        <button className=\"link-btn\">Ver todo ‚Üí</button>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"issues-list\">\n                            {metrics.topIssues.map((issue, index) => (\n                                <div key={index} className=\"issue-item\">\n                                    <div className=\"issue-rank\">{index + 1}</div>\n                                    <div className=\"issue-content\">\n                                        <div className=\"issue-header\">\n                                            <span className=\"issue-name\">{issue.issue}</span>\n                                            <span className={`issue-trend ${getTrendClass(issue.trend)}`}>\n                        {getTrendIcon(issue.trend)}\n                      </span>\n                                        </div>\n                                        <div className=\"issue-stats\">\n                                            <span className=\"issue-count\">{issue.count} casos</span>\n                                            <span className=\"issue-percentage\">{issue.percentage}%</span>\n                                        </div>\n                                        <div className=\"issue-progress\">\n                                            <div\n                                                className=\"progress-bar\"\n                                                style={{ width: `${issue.percentage * 5}%` }}\n                                            ></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n\n                {/* Tasa de Resoluci√≥n por Hora */}\n                <div className=\"analytics-card\">\n                    <div className=\"card-header\">\n                        <h3>Tasa de Resoluci√≥n</h3>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"resolution-stats\">\n                            <div className=\"stat-circle\">\n                                <svg viewBox=\"0 0 36 36\" className=\"circular-chart\">\n                                    <path\n                                        className=\"circle-bg\"\n                                        d=\"M18 2.0845\n                      a 15.9155 15.9155 0 0 1 0 31.831\n                      a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                    />\n                                    <path\n                                        className=\"circle\"\n                                        strokeDasharray=\"89.4, 100\"\n                                        d=\"M18 2.0845\n                      a 15.9155 15.9155 0 0 1 0 31.831\n                      a 15.9155 15.9155 0 0 1 0 -31.831\"\n                                    />\n                                    <text x=\"18\" y=\"20.35\" className=\"percentage\">89.4%</text>\n                                </svg>\n                            </div>\n                            <div className=\"stat-details\">\n                                <div className=\"stat-row\">\n                                    <span className=\"stat-label\">‚úÖ Resueltos</span>\n                                    <span className=\"stat-value\">2,197</span>\n                                </div>\n                                <div className=\"stat-row\">\n                                    <span className=\"stat-label\">‚è≥ Pendientes</span>\n                                    <span className=\"stat-value\">261</span>\n                                </div>\n                                <div className=\"stat-row\">\n                                    <span className=\"stat-label\">üìä Total</span>\n                                    <span className=\"stat-value\">2,458</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Performance por Agente */}\n                <div className=\"analytics-card full-width\">\n                    <div className=\"card-header\">\n                        <h3>Performance por Agente</h3>\n                        <button className=\"link-btn\">Ver detalles ‚Üí</button>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"agents-table\">\n                            <table>\n                                <thead>\n                                <tr>\n                                    <th>Agente</th>\n                                    <th>Conversaciones</th>\n                                    <th>Tiempo Prom.</th>\n                                    <th>Satisfacci√≥n</th>\n                                    <th>Tasa Resoluci√≥n</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {[\n                                    { name: 'Juan P√©rez', conversations: 342, avgTime: '2.1 min', satisfaction: 4.8, resolution: 92 },\n                                    { name: 'Mar√≠a Garc√≠a', conversations: 318, avgTime: '2.3 min', satisfaction: 4.7, resolution: 90 },\n                                    { name: 'Carlos L√≥pez', conversations: 289, avgTime: '2.5 min', satisfaction: 4.6, resolution: 88 },\n                                    { name: 'Ana Mart√≠nez', conversations: 256, avgTime: '2.2 min', satisfaction: 4.9, resolution: 94 }\n                                ].map((agent, index) => (\n                                    <tr key={index}>\n                                        <td>\n                                            <div className=\"agent-cell\">\n                                                <div className=\"agent-avatar\">{agent.name.charAt(0)}</div>\n                                                <span>{agent.name}</span>\n                                            </div>\n                                        </td>\n                                        <td>{agent.conversations}</td>\n                                        <td>{agent.avgTime}</td>\n                                        <td>\n                                            <span className=\"rating\">‚≠ê {agent.satisfaction}</span>\n                                        </td>\n                                        <td>\n                                            <div className=\"resolution-cell\">\n                                                <span>{agent.resolution}%</span>\n                                                <div className=\"mini-progress\">\n                                                    <div\n                                                        className=\"mini-progress-bar\"\n                                                        style={{ width: `${agent.resolution}%` }}\n                                                    ></div>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    );\n};\n\nexport default AnalyticsDashboard;","// frontend/admin-panel/src/components/Analytics/ConversationAnalytics.jsx\nimport React, { useState } from 'react';\nimport '../../styles/components/ConversationAnalytics.css';\n\nconst ConversationAnalytics = () => {\n    const [viewMode, setViewMode] = useState('overview');\n\n    const conversationMetrics = {\n        totalConversations: 2458,\n        activeConversations: 45,\n        avgDuration: '8.5 min',\n        avgMessagesPerConversation: 12.3,\n        escalationRate: '15.2%',\n        abandonmentRate: '5.8%'\n    };\n\n    const conversationFlow = [\n        { stage: 'Iniciadas', count: 2458, percentage: 100, color: '#667eea' },\n        { stage: 'Bot Respondi√≥', count: 2401, percentage: 97.7, color: '#764ba2' },\n        { stage: 'Escaladas', count: 374, percentage: 15.2, color: '#f093fb' },\n        { stage: 'Resueltas', count: 2197, percentage: 89.4, color: '#43e97b' },\n        { stage: 'Abandonadas', count: 143, percentage: 5.8, color: '#ea4335' }\n    ];\n\n    const intentDistribution = [\n        { intent: 'Consulta de saldo', count: 456, percentage: 18.5, confidence: 95 },\n        { intent: 'Transferencias', count: 398, percentage: 16.2, confidence: 92 },\n        { intent: 'Problemas de acceso', count: 342, percentage: 13.9, confidence: 88 },\n        { intent: 'Tarjetas', count: 298, percentage: 12.1, confidence: 90 },\n        { intent: 'Pr√©stamos', count: 234, percentage: 9.5, confidence: 87 },\n        { intent: 'Otros', count: 730, percentage: 29.7, confidence: 75 }\n    ];\n\n    const hourlyDistribution = [\n        { hour: '00-04', conversations: 45, percentage: 1.8 },\n        { hour: '04-08', conversations: 89, percentage: 3.6 },\n        { hour: '08-12', conversations: 678, percentage: 27.6 },\n        { hour: '12-16', conversations: 892, percentage: 36.3 },\n        { hour: '16-20', conversations: 534, percentage: 21.7 },\n        { hour: '20-00', conversations: 220, percentage: 9.0 }\n    ];\n\n    return (\n        <div className=\"conversation-analytics\">\n            <div className=\"analytics-header\">\n                <h2>An√°lisis de Conversaciones</h2>\n                <div className=\"view-mode-toggle\">\n                    <button\n                        className={viewMode === 'overview' ? 'active' : ''}\n                        onClick={() => setViewMode('overview')}\n                    >\n                        Vista General\n                    </button>\n                    <button\n                        className={viewMode === 'detailed' ? 'active' : ''}\n                        onClick={() => setViewMode('detailed')}\n                    >\n                        Detallado\n                    </button>\n                </div>\n            </div>\n\n            {/* M√©tricas Clave */}\n            <div className=\"metrics-grid\">\n                <div className=\"metric-box\">\n                    <span className=\"metric-icon\">üí¨</span>\n                    <div className=\"metric-content\">\n                        <span className=\"metric-label\">Total Conversaciones</span>\n                        <span className=\"metric-value\">{conversationMetrics.totalConversations}</span>\n                    </div>\n                </div>\n\n                <div className=\"metric-box\">\n                    <span className=\"metric-icon\">üü¢</span>\n                    <div className=\"metric-content\">\n                        <span className=\"metric-label\">Conversaciones Activas</span>\n                        <span className=\"metric-value\">{conversationMetrics.activeConversations}</span>\n                    </div>\n                </div>\n\n                <div className=\"metric-box\">\n                    <span className=\"metric-icon\">‚è±Ô∏è</span>\n                    <div className=\"metric-content\">\n                        <span className=\"metric-label\">Duraci√≥n Promedio</span>\n                        <span className=\"metric-value\">{conversationMetrics.avgDuration}</span>\n                    </div>\n                </div>\n\n                <div className=\"metric-box\">\n                    <span className=\"metric-icon\">‚úâÔ∏è</span>\n                    <div className=\"metric-content\">\n                        <span className=\"metric-label\">Mensajes Promedio</span>\n                        <span className=\"metric-value\">{conversationMetrics.avgMessagesPerConversation}</span>\n                    </div>\n                </div>\n\n                <div className=\"metric-box\">\n                    <span className=\"metric-icon\">‚¨ÜÔ∏è</span>\n                    <div className=\"metric-content\">\n                        <span className=\"metric-label\">Tasa de Escalaci√≥n</span>\n                        <span className=\"metric-value\">{conversationMetrics.escalationRate}</span>\n                    </div>\n                </div>\n\n                <div className=\"metric-box\">\n                    <span className=\"metric-icon\">üö™</span>\n                    <div className=\"metric-content\">\n                        <span className=\"metric-label\">Tasa de Abandono</span>\n                        <span className=\"metric-value\">{conversationMetrics.abandonmentRate}</span>\n                    </div>\n                </div>\n            </div>\n\n            {/* Flujo de Conversaciones */}\n            <div className=\"analytics-card\">\n                <h3>Flujo de Conversaciones</h3>\n                <div className=\"conversation-flow\">\n                    {conversationFlow.map((stage, index) => (\n                        <div key={index} className=\"flow-stage\">\n                            <div className=\"stage-header\">\n                                <span className=\"stage-name\">{stage.stage}</span>\n                                <span className=\"stage-count\">{stage.count}</span>\n                            </div>\n                            <div className=\"stage-bar-container\">\n                                <div\n                                    className=\"stage-bar\"\n                                    style={{\n                                        width: `${stage.percentage}%`,\n                                        background: stage.color\n                                    }}\n                                >\n                                    <span className=\"stage-percentage\">{stage.percentage}%</span>\n                                </div>\n                            </div>\n                            {index < conversationFlow.length - 1 && (\n                                <div className=\"flow-arrow\">‚Üì</div>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"analytics-row\">\n                {/* Distribuci√≥n de Intenciones */}\n                <div className=\"analytics-card half-width\">\n                    <h3>Distribuci√≥n de Intenciones</h3>\n                    <div className=\"intent-list\">\n                        {intentDistribution.map((intent, index) => (\n                            <div key={index} className=\"intent-item\">\n                                <div className=\"intent-header\">\n                                    <span className=\"intent-name\">{intent.intent}</span>\n                                    <span className=\"intent-count\">{intent.count}</span>\n                                </div>\n                                <div className=\"intent-bars\">\n                                    <div className=\"intent-bar-container\">\n                                        <div\n                                            className=\"intent-bar\"\n                                            style={{ width: `${intent.percentage * 5}%` }}\n                                        >\n                                            <span className=\"bar-label\">{intent.percentage}%</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"confidence-bar-container\">\n                                        <div\n                                            className=\"confidence-bar\"\n                                            style={{ width: `${intent.confidence}%` }}\n                                            title={`Confianza: ${intent.confidence}%`}\n                                        ></div>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                {/* Distribuci√≥n Horaria */}\n                <div className=\"analytics-card half-width\">\n                    <h3>Distribuci√≥n Horaria</h3>\n                    <div className=\"hourly-chart\">\n                        {hourlyDistribution.map((period, index) => {\n                            const maxConversations = Math.max(...hourlyDistribution.map(p => p.conversations));\n                            const height = (period.conversations / maxConversations) * 100;\n\n                            return (\n                                <div key={index} className=\"hour-column\">\n                                    <div className=\"hour-bar-container\">\n                                        <div\n                                            className=\"hour-bar\"\n                                            style={{ height: `${height}%` }}\n                                        >\n                                            <span className=\"bar-tooltip\">{period.conversations}</span>\n                                        </div>\n                                    </div>\n                                    <div className=\"hour-info\">\n                                        <span className=\"hour-label\">{period.hour}</span>\n                                        <span className=\"hour-percentage\">{period.percentage}%</span>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n\n            {/* Sentimiento de Conversaciones */}\n            <div className=\"analytics-card\">\n                <h3>An√°lisis de Sentimiento</h3>\n                <div className=\"sentiment-analysis\">\n                    <div className=\"sentiment-overview\">\n                        <div className=\"sentiment-card positive\">\n                            <span className=\"sentiment-icon\">üòä</span>\n                            <span className=\"sentiment-label\">Positivo</span>\n                            <span className=\"sentiment-value\">64.3%</span>\n                            <span className=\"sentiment-count\">1,580 conversaciones</span>\n                        </div>\n                        <div className=\"sentiment-card neutral\">\n                            <span className=\"sentiment-icon\">üòê</span>\n                            <span className=\"sentiment-label\">Neutral</span>\n                            <span className=\"sentiment-value\">28.5%</span>\n                            <span className=\"sentiment-count\">701 conversaciones</span>\n                        </div>\n                        <div className=\"sentiment-card negative\">\n                            <span className=\"sentiment-icon\">üòû</span>\n                            <span className=\"sentiment-label\">Negativo</span>\n                            <span className=\"sentiment-value\">7.2%</span>\n                            <span className=\"sentiment-count\">177 conversaciones</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ConversationAnalytics;","// frontend/admin-panel/src/components/Analytics/AgentPerformance.jsx\nimport React, { useState } from 'react';\nimport '../../styles/components/AgentPerformance.css';\n\nconst AgentPerformance = () => {\n    const [selectedAgent, setSelectedAgent] = useState(null);\n    const [sortBy, setSortBy] = useState('conversations');\n\n    const agents = [\n        {\n            id: 1,\n            name: 'Juan P√©rez',\n            avatar: null,\n            status: 'online',\n            conversations: 342,\n            avgResponseTime: '2.1 min',\n            satisfaction: 4.8,\n            resolutionRate: 92,\n            activeTickets: 8,\n            totalTickets: 156,\n            firstResponseTime: '45 seg',\n            onlineTime: '7.5 hrs'\n        },\n        {\n            id: 2,\n            name: 'Mar√≠a Garc√≠a',\n            avatar: null,\n            status: 'online',\n            conversations: 318,\n            avgResponseTime: '2.3 min',\n            satisfaction: 4.7,\n            resolutionRate: 90,\n            activeTickets: 6,\n            totalTickets: 142,\n            firstResponseTime: '52 seg',\n            onlineTime: '8.2 hrs'\n        },\n        {\n            id: 3,\n            name: 'Carlos L√≥pez',\n            avatar: null,\n            status: 'away',\n            conversations: 289,\n            avgResponseTime: '2.5 min',\n            satisfaction: 4.6,\n            resolutionRate: 88,\n            activeTickets: 5,\n            totalTickets: 128,\n            firstResponseTime: '1.1 min',\n            onlineTime: '6.8 hrs'\n        },\n        {\n            id: 4,\n            name: 'Ana Mart√≠nez',\n            avatar: null,\n            status: 'online',\n            conversations: 256,\n            avgResponseTime: '2.2 min',\n            satisfaction: 4.9,\n            resolutionRate: 94,\n            activeTickets: 7,\n            totalTickets: 118,\n            firstResponseTime: '38 seg',\n            onlineTime: '7.9 hrs'\n        }\n    ];\n\n    const sortAgents = (agents, sortBy) => {\n        return [...agents].sort((a, b) => {\n            switch(sortBy) {\n                case 'conversations':\n                    return b.conversations - a.conversations;\n                case 'satisfaction':\n                    return b.satisfaction - a.satisfaction;\n                case 'resolution':\n                    return b.resolutionRate - a.resolutionRate;\n                case 'responseTime':\n                    return parseFloat(a.avgResponseTime) - parseFloat(b.avgResponseTime);\n                default:\n                    return 0;\n            }\n        });\n    };\n\n    const sortedAgents = sortAgents(agents, sortBy);\n\n    const getStatusColor = (status) => {\n        switch(status) {\n            case 'online': return '#43e97b';\n            case 'away': return '#feca57';\n            case 'offline': return '#95a5a6';\n            default: return '#95a5a6';\n        }\n    };\n\n    const getStatusLabel = (status) => {\n        switch(status) {\n            case 'online': return 'En l√≠nea';\n            case 'away': return 'Ausente';\n            case 'offline': return 'Desconectado';\n            default: return 'Desconocido';\n        }\n    };\n\n    return (\n        <div className=\"agent-performance\">\n            <div className=\"performance-header\">\n                <div className=\"header-left\">\n                    <h2>Performance de Agentes</h2>\n                    <p className=\"subtitle\">Rendimiento individual y m√©tricas de equipo</p>\n                </div>\n                <div className=\"header-right\">\n                    <select\n                        value={sortBy}\n                        onChange={(e) => setSortBy(e.target.value)}\n                        className=\"sort-select\"\n                    >\n                        <option value=\"conversations\">M√°s conversaciones</option>\n                        <option value=\"satisfaction\">Mayor satisfacci√≥n</option>\n                        <option value=\"resolution\">Mayor resoluci√≥n</option>\n                        <option value=\"responseTime\">Menor tiempo respuesta</option>\n                    </select>\n                </div>\n            </div>\n\n            {/* Estad√≠sticas del Equipo */}\n            <div className=\"team-stats\">\n                <div className=\"stat-card\">\n                    <span className=\"stat-icon\">üë•</span>\n                    <div className=\"stat-content\">\n                        <span className=\"stat-label\">Agentes Activos</span>\n                        <span className=\"stat-value\">{agents.filter(a => a.status === 'online').length}/{agents.length}</span>\n                    </div>\n                </div>\n\n                <div className=\"stat-card\">\n                    <span className=\"stat-icon\">üí¨</span>\n                    <div className=\"stat-content\">\n                        <span className=\"stat-label\">Conversaciones Totales</span>\n                        <span className=\"stat-value\">{agents.reduce((acc, a) => acc + a.conversations, 0)}</span>\n                    </div>\n                </div>\n\n                <div className=\"stat-card\">\n                    <span className=\"stat-icon\">‚≠ê</span>\n                    <div className=\"stat-content\">\n                        <span className=\"stat-label\">Satisfacci√≥n Promedio</span>\n                        <span className=\"stat-value\">\n              {(agents.reduce((acc, a) => acc + a.satisfaction, 0) / agents.length).toFixed(1)}\n            </span>\n                    </div>\n                </div>\n\n                <div className=\"stat-card\">\n                    <span className=\"stat-icon\">‚úÖ</span>\n                    <div className=\"stat-content\">\n                        <span className=\"stat-label\">Tasa Resoluci√≥n</span>\n                        <span className=\"stat-value\">\n              {(agents.reduce((acc, a) => acc + a.resolutionRate, 0) / agents.length).toFixed(0)}%\n            </span>\n                    </div>\n                </div>\n            </div>\n\n            {/* Lista de Agentes */}\n            <div className=\"agents-grid\">\n                {sortedAgents.map((agent) => (\n                    <div\n                        key={agent.id}\n                        className={`agent-card ${selectedAgent === agent.id ? 'selected' : ''}`}\n                        onClick={() => setSelectedAgent(agent.id)}\n                    >\n                        <div className=\"agent-card-header\">\n                            <div className=\"agent-info\">\n                                <div className=\"agent-avatar\">\n                                    {agent.avatar ? (\n                                        <img src={agent.avatar} alt={agent.name} />\n                                    ) : (\n                                        <span>{agent.name.charAt(0)}</span>\n                                    )}\n                                    <span\n                                        className=\"status-indicator\"\n                                        style={{ background: getStatusColor(agent.status) }}\n                                    ></span>\n                                </div>\n                                <div className=\"agent-details\">\n                                    <h4 className=\"agent-name\">{agent.name}</h4>\n                                    <span className=\"agent-status\">{getStatusLabel(agent.status)}</span>\n                                </div>\n                            </div>\n                            <button className=\"more-btn\">‚ãÆ</button>\n                        </div>\n\n                        <div className=\"agent-card-body\">\n                            <div className=\"metric-row\">\n                                <div className=\"metric-item\">\n                                    <span className=\"metric-label\">Conversaciones</span>\n                                    <span className=\"metric-value\">{agent.conversations}</span>\n                                </div>\n                                <div className=\"metric-item\">\n                                    <span className=\"metric-label\">Tickets Activos</span>\n                                    <span className=\"metric-value\">{agent.activeTickets}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"metric-row\">\n                                <div className=\"metric-item\">\n                                    <span className=\"metric-label\">Tiempo Respuesta</span>\n                                    <span className=\"metric-value\">{agent.avgResponseTime}</span>\n                                </div>\n                                <div className=\"metric-item\">\n                                    <span className=\"metric-label\">Primer Respuesta</span>\n                                    <span className=\"metric-value\">{agent.firstResponseTime}</span>\n                                </div>\n                            </div>\n\n                            <div className=\"satisfaction-row\">\n                                <span className=\"satisfaction-label\">Satisfacci√≥n</span>\n                                <div className=\"satisfaction-bar\">\n                                    <div\n                                        className=\"satisfaction-fill\"\n                                        style={{ width: `${(agent.satisfaction / 5) * 100}%` }}\n                                    ></div>\n                                </div>\n                                <span className=\"satisfaction-value\">‚≠ê {agent.satisfaction}</span>\n                            </div>\n\n                            <div className=\"resolution-row\">\n                                <span className=\"resolution-label\">Tasa de Resoluci√≥n</span>\n                                <div className=\"resolution-bar\">\n                                    <div\n                                        className=\"resolution-fill\"\n                                        style={{ width: `${agent.resolutionRate}%` }}\n                                    ></div>\n                                </div>\n                                <span className=\"resolution-value\">{agent.resolutionRate}%</span>\n                            </div>\n\n                            <div className=\"time-online\">\n                                <span className=\"time-icon\">‚è±Ô∏è</span>\n                                <span>Tiempo en l√≠nea hoy: <strong>{agent.onlineTime}</strong></span>\n                            </div>\n                        </div>\n\n                        <div className=\"agent-card-footer\">\n                            <button className=\"view-details-btn\">\n                                Ver Detalles ‚Üí\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* Comparaci√≥n de Agentes */}\n            <div className=\"comparison-section\">\n                <h3>Comparaci√≥n de Performance</h3>\n                <div className=\"comparison-table\">\n                    <table>\n                        <thead>\n                        <tr>\n                            <th>Agente</th>\n                            <th>Conversaciones</th>\n                            <th>Tiempo Respuesta</th>\n                            <th>Satisfacci√≥n</th>\n                            <th>Resoluci√≥n</th>\n                            <th>Tiempo Online</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {sortedAgents.map((agent) => (\n                            <tr key={agent.id}>\n                                <td>\n                                    <div className=\"table-agent\">\n                                        <div className=\"table-avatar\">\n                                            {agent.name.charAt(0)}\n                                        </div>\n                                        <span>{agent.name}</span>\n                                    </div>\n                                </td>\n                                <td>{agent.conversations}</td>\n                                <td>{agent.avgResponseTime}</td>\n                                <td>\n                                    <span className=\"table-rating\">‚≠ê {agent.satisfaction}</span>\n                                </td>\n                                <td>\n                                    <div className=\"table-resolution\">\n                                        <span>{agent.resolutionRate}%</span>\n                                        <div className=\"mini-bar\">\n                                            <div\n                                                className=\"mini-bar-fill\"\n                                                style={{ width: `${agent.resolutionRate}%` }}\n                                            ></div>\n                                        </div>\n                                    </div>\n                                </td>\n                                <td>{agent.onlineTime}</td>\n                            </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AgentPerformance;","// frontend/admin-panel/src/pages/AnalyticsPage.jsx\nimport React, { useState } from 'react';\nimport AnalyticsDashboard from '../components/Analytics/AnalyticsDashboard';\nimport ConversationAnalytics from '../components/Analytics/ConversationAnalytics';\nimport AgentPerformance from '../components/Analytics/AgentPerformance';\nimport '../styles/pages/AnalyticsPage.css';\n\nconst AnalyticsPage = () => {\n    const [activeView, setActiveView] = useState('overview');\n\n    const views = [\n        { id: 'overview', label: 'Vista General', icon: 'üìä', description: 'M√©tricas globales y tendencias' },\n        { id: 'conversations', label: 'Conversaciones', icon: 'üí¨', description: 'An√°lisis detallado de chats' },\n        { id: 'agents', label: 'Agentes', icon: 'üë•', description: 'Rendimiento del equipo' }\n    ];\n\n    const getActiveView = () => {\n        switch(activeView) {\n            case 'overview': return <AnalyticsDashboard />;\n            case 'conversations': return <ConversationAnalytics />;\n            case 'agents': return <AgentPerformance />;\n            default: return <AnalyticsDashboard />;\n        }\n    };\n\n    return (\n        <div className=\"analytics-page\">\n            {/* Header Modernizado */}\n            <div className=\"analytics-page-header\">\n                <h1>Analytics Dashboard</h1>\n                <p>Monitoriza el rendimiento y optimiza tu servicio al cliente con datos en tiempo real</p>\n            </div>\n\n            {/* Tabs de Navegaci√≥n R√°pida Modernizadas */}\n            <div className=\"analytics-tabs\">\n                {views.map(view => (\n                    <button\n                        key={view.id}\n                        className={`analytics-tab ${activeView === view.id ? 'active' : ''}`}\n                        onClick={() => setActiveView(view.id)}\n                    >\n                        <span className=\"tab-icon\">{view.icon}</span>\n                        <div className=\"tab-content\">\n                            <span className=\"tab-label\">{view.label}</span>\n                            <span className=\"tab-description\">{view.description}</span>\n                        </div>\n                        <div className=\"tab-indicator\"></div>\n                    </button>\n                ))}\n            </div>\n\n            {/* Controles de Fecha y Exportaci√≥n */}\n            <div className=\"analytics-controls\">\n                <div className=\"control-group\">\n                    <button className=\"control-btn date-picker\">\n                        <span className=\"control-icon\">üìÖ</span>\n                        <span className=\"control-text\">√öltimos 7 d√≠as</span>\n                        <span className=\"control-arrow\">‚åÑ</span>\n                    </button>\n\n                    <button className=\"control-btn export-btn\">\n                        <span className=\"control-icon\">üì•</span>\n                        <span className=\"control-text\">Exportar Reporte</span>\n                    </button>\n                </div>\n\n                <div className=\"view-stats\">\n                    <span className=\"stat-badge\">üìà Datos en tiempo real</span>\n                    <span className=\"stat-badge\">üîÑ Actualizado hace 5 min</span>\n                </div>\n            </div>\n\n            {/* Contenido de Analytics */}\n            <div className=\"analytics-content\">\n                {getActiveView()}\n            </div>\n        </div>\n    );\n};\n\nexport default AnalyticsPage;\n","// frontend/admin-panel/src/pages/CustomersPage.jsx\nimport React, { useState } from 'react';\nimport '../styles/pages/CustomersPage.css';\n\nconst CustomersPage = () => {\n    const [customers] = useState([\n        {\n            id: 1,\n            name: 'Juan P√©rez',\n            email: 'juan.perez@email.com',\n            phone: '+1 809-555-0123',\n            totalConversations: 15,\n            lastContact: '2024-01-15',\n            status: 'active'\n        },\n        {\n            id: 2,\n            name: 'Mar√≠a Garc√≠a',\n            email: 'maria.garcia@email.com',\n            phone: '+1 809-555-0456',\n            totalConversations: 8,\n            lastContact: '2024-01-14',\n            status: 'active'\n        },\n        {\n            id: 3,\n            name: 'Carlos Rodr√≠guez',\n            email: 'carlos.rodriguez@email.com',\n            phone: '+1 809-555-0789',\n            totalConversations: 3,\n            lastContact: '2024-01-10',\n            status: 'inactive'\n        },\n        {\n            id: 4,\n            name: 'Ana L√≥pez',\n            email: 'ana.lopez@email.com',\n            phone: '+1 809-555-0321',\n            totalConversations: 22,\n            lastContact: '2024-01-16',\n            status: 'active'\n        }\n    ]);\n\n    // Iconos modernos\n    const icons = {\n        customers: 'üë•',\n        export: 'üìä',\n        new: '‚ú®',\n        search: 'üîç',\n        view: 'üëÄ',\n        edit: '‚úèÔ∏è',\n        active: 'üü¢',\n        inactive: '‚ö´'\n    };\n\n    return (\n        <div className=\"customers-page\">\n            <div className=\"page-header\">\n                <div className=\"header-left\">\n                    <h1>{icons.customers} Clientes</h1>\n                    <p className=\"page-subtitle\">Gesti√≥n de clientes y contactos</p>\n                </div>\n                <div className=\"header-right\">\n                    <button className=\"btn-secondary\">\n                        {icons.export} Exportar\n                    </button>\n                    <button className=\"btn-primary\">\n                        {icons.new} Nuevo Cliente\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"customers-filters\">\n                <div className=\"search-box\">\n                    <span className=\"search-icon\">{icons.search}</span>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Buscar clientes...\"\n                        className=\"search-input\"\n                    />\n                </div>\n                <select className=\"filter-select\">\n                    <option value=\"all\">Todos los clientes</option>\n                    <option value=\"active\">Activos</option>\n                    <option value=\"inactive\">Inactivos</option>\n                </select>\n            </div>\n\n            <div className=\"customers-table-container\">\n                <table className=\"customers-table\">\n                    <thead>\n                    <tr>\n                        <th>Cliente</th>\n                        <th>Email</th>\n                        <th>Tel√©fono</th>\n                        <th>Conversaciones</th>\n                        <th>√öltimo Contacto</th>\n                        <th>Estado</th>\n                        <th>Acciones</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {customers.map(customer => (\n                        <tr key={customer.id}>\n                            <td>\n                                <div className=\"customer-cell\">\n                                    <div className=\"customer-avatar\">\n                                        {customer.name.split(' ').map(n => n[0]).join('')}\n                                    </div>\n                                    <span className=\"customer-name\">{customer.name}</span>\n                                </div>\n                            </td>\n                            <td className=\"customer-email\">{customer.email}</td>\n                            <td className=\"customer-phone\">{customer.phone}</td>\n                            <td className=\"customer-conversations\">\n                                <strong>{customer.totalConversations}</strong>\n                            </td>\n                            <td className=\"customer-last-contact\">{customer.lastContact}</td>\n                            <td>\n                                <span className={`status-badge ${customer.status}`}>\n                                    {customer.status === 'active' ? 'Activo' : 'Inactivo'}\n                                </span>\n                            </td>\n                            <td>\n                                <div className=\"action-buttons\">\n                                    <button className=\"btn-icon\" title=\"Ver detalles\">\n                                        {icons.view}\n                                    </button>\n                                    <button className=\"btn-icon\" title=\"Editar cliente\">\n                                        {icons.edit}\n                                    </button>\n                                </div>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default CustomersPage;","// frontend/admin-panel/src/pages/KnowledgeBasePage.jsx\nimport React, { useState } from 'react';\nimport '../styles/pages/KnowledgeBasePage.css';\n\nconst KnowledgeBasePage = () => {\n    const [articles] = useState([\n        {\n            id: 1,\n            title: 'C√≥mo realizar una transferencia bancaria',\n            category: 'Transacciones',\n            views: 1234,\n            lastUpdated: '2024-01-15',\n            status: 'published'\n        },\n        {\n            id: 2,\n            title: 'Requisitos para solicitar un pr√©stamo',\n            category: 'Pr√©stamos',\n            views: 892,\n            lastUpdated: '2024-01-14',\n            status: 'published'\n        },\n        {\n            id: 3,\n            title: 'Uso seguro de tarjetas de cr√©dito',\n            category: 'Tarjetas',\n            views: 567,\n            lastUpdated: '2024-01-13',\n            status: 'draft'\n        },\n        {\n            id: 4,\n            title: 'Configuraci√≥n de alertas de seguridad',\n            category: 'Seguridad',\n            views: 2341,\n            lastUpdated: '2024-01-12',\n            status: 'published'\n        }\n    ]);\n\n    // Iconos modernos\n    const icons = {\n        knowledge: 'üìö',\n        import: 'üì•',\n        new: '‚ú®',\n        articles: 'üìÑ',\n        views: 'üëÅÔ∏è',\n        categories: 'üìÇ',\n        search: 'üîç',\n        edit: '‚úèÔ∏è',\n        view: 'üëÄ',\n        transaction: 'üí≥',\n        loan: 'üí∞',\n        card: 'üí≥',\n        security: 'üõ°Ô∏è'\n    };\n\n    return (\n        <div className=\"knowledge-base-page\">\n            <div className=\"page-header\">\n                <div className=\"header-left\">\n                    <h1>{icons.knowledge} Base de Conocimiento</h1>\n                    <p className=\"page-subtitle\">Art√≠culos y documentaci√≥n para el chatbot</p>\n                </div>\n                <div className=\"header-right\">\n                    <button className=\"btn-secondary\">\n                        {icons.import} Importar\n                    </button>\n                    <button className=\"btn-primary\">\n                        {icons.new} Nuevo Art√≠culo\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"knowledge-stats\">\n                <div className=\"stat-card\">\n                    <div className=\"stat-icon\">{icons.articles}</div>\n                    <div className=\"stat-content\">\n                        <span className=\"stat-label\">Total Art√≠culos</span>\n                        <span className=\"stat-value\">156</span>\n                    </div>\n                </div>\n                <div className=\"stat-card\">\n                    <div className=\"stat-icon\">{icons.views}</div>\n                    <div className=\"stat-content\">\n                        <span className=\"stat-label\">Vistas Totales</span>\n                        <span className=\"stat-value\">12,450</span>\n                    </div>\n                </div>\n                <div className=\"stat-card\">\n                    <div className=\"stat-icon\">{icons.categories}</div>\n                    <div className=\"stat-content\">\n                        <span className=\"stat-label\">Categor√≠as</span>\n                        <span className=\"stat-value\">8</span>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"knowledge-filters\">\n                <div className=\"search-box\">\n                    <span className=\"search-icon\">{icons.search}</span>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Buscar art√≠culos...\"\n                        className=\"search-input\"\n                    />\n                </div>\n                <select className=\"filter-select\">\n                    <option value=\"all\">Todas las categor√≠as</option>\n                    <option value=\"transactions\">Transacciones</option>\n                    <option value=\"loans\">Pr√©stamos</option>\n                    <option value=\"cards\">Tarjetas</option>\n                    <option value=\"security\">Seguridad</option>\n                </select>\n            </div>\n\n            <div className=\"articles-grid\">\n                {articles.map(article => (\n                    <div key={article.id} className=\"article-card\">\n                        <div className=\"article-header\">\n                            <span className=\"article-category\">{article.category}</span>\n                            <span className={`status-badge ${article.status}`}>\n                                {article.status === 'published' ? 'Publicado' : 'Borrador'}\n                            </span>\n                        </div>\n                        <h3 className=\"article-title\">{article.title}</h3>\n                        <div className=\"article-footer\">\n                            <span className=\"article-views\">{icons.views} {article.views} vistas</span>\n                            <span className=\"article-date\">Actualizado: {article.lastUpdated}</span>\n                        </div>\n                        <div className=\"article-actions\">\n                            <button className=\"btn-secondary btn-small\">\n                                {icons.edit} Editar\n                            </button>\n                            <button className=\"btn-secondary btn-small\">\n                                {icons.view} Ver\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default KnowledgeBasePage;","// frontend/admin-panel/src/components/Settings/BotConfiguration.jsx\nimport React, { useState } from 'react';\nimport \"../../styles/components/BotConfiguration.css\"\n\nconst BotConfiguration = ({ config, onSave }) => {\n    const [formData, setFormData] = useState({\n        botName: config?.botName || 'ChatBot Bancario',\n        welcomeMessage: config?.welcomeMessage || '¬°Hola! ¬øEn qu√© puedo ayudarte hoy?',\n        primaryColor: config?.primaryColor || '#667eea',\n        language: config?.language || 'es',\n        timezone: config?.timezone || 'America/Santo_Domingo',\n        maxConversationDuration: config?.maxConversationDuration || 30,\n        autoEscalationEnabled: config?.autoEscalationEnabled || false,\n        autoEscalationTimeout: config?.autoEscalationTimeout || 5,\n        confidenceThreshold: config?.confidenceThreshold || 0.7,\n        fallbackMessage: config?.fallbackMessage || 'Lo siento, no entend√≠ tu consulta. ¬øPodr√≠as reformularla?',\n        enableTypingIndicator: config?.enableTypingIndicator ?? true,\n        enableFileUpload: config?.enableFileUpload ?? true,\n        maxFileSize: config?.maxFileSize || 10,\n        allowedFileTypes: config?.allowedFileTypes || 'image/*, .pdf, .doc, .docx',\n        operatingHours: {\n            enabled: config?.operatingHours?.enabled ?? false,\n            start: config?.operatingHours?.start || '09:00',\n            end: config?.operatingHours?.end || '18:00',\n            days: config?.operatingHours?.days || ['monday', 'tuesday', 'wednesday', 'thursday', 'friday']\n        },\n        offlineMessage: config?.offlineMessage || 'Estamos fuera de horario. Nuestro horario es de lunes a viernes de 9:00 AM a 6:00 PM.',\n        enableSentimentAnalysis: config?.enableSentimentAnalysis ?? true,\n        enableSpellCheck: config?.enableSpellCheck ?? true,\n        maxRetries: config?.maxRetries || 3\n    });\n\n    const [isSaving, setIsSaving] = useState(false);\n    const [activeTab, setActiveTab] = useState('general');\n\n    const handleChange = (field, value) => {\n        setFormData(prev => ({\n            ...prev,\n            [field]: value\n        }));\n    };\n\n    const handleNestedChange = (parent, field, value) => {\n        setFormData(prev => ({\n            ...prev,\n            [parent]: {\n                ...prev[parent],\n                [field]: value\n            }\n        }));\n    };\n\n    const handleArrayChange = (parent, field, value) => {\n        setFormData(prev => ({\n            ...prev,\n            [parent]: {\n                ...prev[parent],\n                [field]: value\n            }\n        }));\n    };\n\n    const handleSave = async () => {\n        setIsSaving(true);\n        try {\n            await onSave(formData);\n            alert('Configuraci√≥n guardada exitosamente');\n        } catch (error) {\n            console.error('Error guardando configuraci√≥n:', error);\n            alert('Error al guardar la configuraci√≥n');\n        } finally {\n            setIsSaving(false);\n        }\n    };\n\n    const daysOfWeek = [\n        { value: 'monday', label: 'Lunes' },\n        { value: 'tuesday', label: 'Martes' },\n        { value: 'wednesday', label: 'Mi√©rcoles' },\n        { value: 'thursday', label: 'Jueves' },\n        { value: 'friday', label: 'Viernes' },\n        { value: 'saturday', label: 'S√°bado' },\n        { value: 'sunday', label: 'Domingo' }\n    ];\n\n    return (\n        <div className=\"bot-configuration\">\n            <div className=\"config-header\">\n                <h2>Configuraci√≥n del Bot</h2>\n                <button\n                    className=\"btn-save\"\n                    onClick={handleSave}\n                    disabled={isSaving}\n                >\n                    {isSaving ? 'Guardando...' : 'Guardar Cambios'}\n                </button>\n            </div>\n\n            <div className=\"config-tabs\">\n                <button\n                    className={`tab ${activeTab === 'general' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('general')}\n                >\n                    General\n                </button>\n                <button\n                    className={`tab ${activeTab === 'behavior' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('behavior')}\n                >\n                    Comportamiento\n                </button>\n                <button\n                    className={`tab ${activeTab === 'hours' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('hours')}\n                >\n                    Horarios\n                </button>\n                <button\n                    className={`tab ${activeTab === 'advanced' ? 'active' : ''}`}\n                    onClick={() => setActiveTab('advanced')}\n                >\n                    Avanzado\n                </button>\n            </div>\n\n            <div className=\"config-content\">\n                {/* TAB: General */}\n                {activeTab === 'general' && (\n                    <div className=\"config-section\">\n                        <h3>Configuraci√≥n General</h3>\n\n                        <div className=\"form-group\">\n                            <label>Nombre del Bot</label>\n                            <input\n                                type=\"text\"\n                                value={formData.botName}\n                                onChange={(e) => handleChange('botName', e.target.value)}\n                                placeholder=\"ChatBot Bancario\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Mensaje de Bienvenida</label>\n                            <textarea\n                                value={formData.welcomeMessage}\n                                onChange={(e) => handleChange('welcomeMessage', e.target.value)}\n                                rows=\"3\"\n                                placeholder=\"¬°Hola! ¬øEn qu√© puedo ayudarte hoy?\"\n                            />\n                        </div>\n\n                        <div className=\"form-row\">\n                            <div className=\"form-group\">\n                                <label>Color Principal</label>\n                                <div className=\"color-input-group\">\n                                    <input\n                                        type=\"color\"\n                                        value={formData.primaryColor}\n                                        onChange={(e) => handleChange('primaryColor', e.target.value)}\n                                    />\n                                    <input\n                                        type=\"text\"\n                                        value={formData.primaryColor}\n                                        onChange={(e) => handleChange('primaryColor', e.target.value)}\n                                        placeholder=\"#667eea\"\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Idioma</label>\n                                <select\n                                    value={formData.language}\n                                    onChange={(e) => handleChange('language', e.target.value)}\n                                >\n                                    <option value=\"es\">Espa√±ol</option>\n                                    <option value=\"en\">English</option>\n                                    <option value=\"pt\">Portugu√™s</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Zona Horaria</label>\n                            <select\n                                value={formData.timezone}\n                                onChange={(e) => handleChange('timezone', e.target.value)}\n                            >\n                                <option value=\"America/Santo_Domingo\">Santo Domingo (GMT-4)</option>\n                                <option value=\"America/New_York\">New York (GMT-5)</option>\n                                <option value=\"America/Los_Angeles\">Los Angeles (GMT-8)</option>\n                                <option value=\"Europe/Madrid\">Madrid (GMT+1)</option>\n                            </select>\n                        </div>\n                    </div>\n                )}\n\n                {/* TAB: Comportamiento */}\n                {activeTab === 'behavior' && (\n                    <div className=\"config-section\">\n                        <h3>Configuraci√≥n de Comportamiento</h3>\n\n                        <div className=\"form-group\">\n                            <label>Mensaje de Fallback</label>\n                            <textarea\n                                value={formData.fallbackMessage}\n                                onChange={(e) => handleChange('fallbackMessage', e.target.value)}\n                                rows=\"3\"\n                                placeholder=\"Mensaje cuando el bot no entiende\"\n                            />\n                            <small>Mensaje mostrado cuando el bot no puede responder con confianza</small>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Umbral de Confianza</label>\n                            <input\n                                type=\"range\"\n                                min=\"0\"\n                                max=\"1\"\n                                step=\"0.05\"\n                                value={formData.confidenceThreshold}\n                                onChange={(e) => handleChange('confidenceThreshold', parseFloat(e.target.value))}\n                            />\n                            <span className=\"range-value\">{(formData.confidenceThreshold * 100).toFixed(0)}%</span>\n                            <small>Nivel m√≠nimo de confianza para responder autom√°ticamente</small>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Duraci√≥n M√°xima de Conversaci√≥n (minutos)</label>\n                            <input\n                                type=\"number\"\n                                value={formData.maxConversationDuration}\n                                onChange={(e) => handleChange('maxConversationDuration', parseInt(e.target.value))}\n                                min=\"5\"\n                                max=\"120\"\n                            />\n                            <small>Tiempo m√°ximo antes de cerrar una conversaci√≥n inactiva</small>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Intentos M√°ximos de Reintento</label>\n                            <input\n                                type=\"number\"\n                                value={formData.maxRetries}\n                                onChange={(e) => handleChange('maxRetries', parseInt(e.target.value))}\n                                min=\"1\"\n                                max=\"10\"\n                            />\n                            <small>N√∫mero de veces que el bot intenta entender antes de escalar</small>\n                        </div>\n\n                        <div className=\"toggle-group\">\n                            <label className=\"toggle-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={formData.autoEscalationEnabled}\n                                    onChange={(e) => handleChange('autoEscalationEnabled', e.target.checked)}\n                                />\n                                <span className=\"toggle-switch\"></span>\n                                Escalaci√≥n Autom√°tica\n                            </label>\n                            <small>Escalar autom√°ticamente a agente humano despu√©s de cierto tiempo</small>\n                        </div>\n\n                        {formData.autoEscalationEnabled && (\n                            <div className=\"form-group indent\">\n                                <label>Tiempo para Escalaci√≥n Autom√°tica (minutos)</label>\n                                <input\n                                    type=\"number\"\n                                    value={formData.autoEscalationTimeout}\n                                    onChange={(e) => handleChange('autoEscalationTimeout', parseInt(e.target.value))}\n                                    min=\"1\"\n                                    max=\"30\"\n                                />\n                            </div>\n                        )}\n\n                        <div className=\"toggle-group\">\n                            <label className=\"toggle-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={formData.enableTypingIndicator}\n                                    onChange={(e) => handleChange('enableTypingIndicator', e.target.checked)}\n                                />\n                                <span className=\"toggle-switch\"></span>\n                                Indicador de Escritura\n                            </label>\n                        </div>\n\n                        <div className=\"toggle-group\">\n                            <label className=\"toggle-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={formData.enableSentimentAnalysis}\n                                    onChange={(e) => handleChange('enableSentimentAnalysis', e.target.checked)}\n                                />\n                                <span className=\"toggle-switch\"></span>\n                                An√°lisis de Sentimiento\n                            </label>\n                        </div>\n\n                        <div className=\"toggle-group\">\n                            <label className=\"toggle-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={formData.enableSpellCheck}\n                                    onChange={(e) => handleChange('enableSpellCheck', e.target.checked)}\n                                />\n                                <span className=\"toggle-switch\"></span>\n                                Correcci√≥n Ortogr√°fica\n                            </label>\n                        </div>\n                    </div>\n                )}\n\n                {/* TAB: Horarios */}\n                {activeTab === 'hours' && (\n                    <div className=\"config-section\">\n                        <h3>Horario de Operaci√≥n</h3>\n\n                        <div className=\"toggle-group\">\n                            <label className=\"toggle-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={formData.operatingHours.enabled}\n                                    onChange={(e) => handleNestedChange('operatingHours', 'enabled', e.target.checked)}\n                                />\n                                <span className=\"toggle-switch\"></span>\n                                Habilitar Horario de Operaci√≥n\n                            </label>\n                        </div>\n\n                        {formData.operatingHours.enabled && (\n                            <>\n                                <div className=\"form-row\">\n                                    <div className=\"form-group\">\n                                        <label>Hora de Inicio</label>\n                                        <input\n                                            type=\"time\"\n                                            value={formData.operatingHours.start}\n                                            onChange={(e) => handleNestedChange('operatingHours', 'start', e.target.value)}\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Hora de Fin</label>\n                                        <input\n                                            type=\"time\"\n                                            value={formData.operatingHours.end}\n                                            onChange={(e) => handleNestedChange('operatingHours', 'end', e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>D√≠as de Operaci√≥n</label>\n                                    <div className=\"days-selector\">\n                                        {daysOfWeek.map(day => (\n                                            <label key={day.value} className=\"day-checkbox\">\n                                                <input\n                                                    type=\"checkbox\"\n                                                    checked={formData.operatingHours.days.includes(day.value)}\n                                                    onChange={(e) => {\n                                                        const newDays = e.target.checked\n                                                            ? [...formData.operatingHours.days, day.value]\n                                                            : formData.operatingHours.days.filter(d => d !== day.value);\n                                                        handleArrayChange('operatingHours', 'days', newDays);\n                                                    }}\n                                                />\n                                                {day.label}\n                                            </label>\n                                        ))}\n                                    </div>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label>Mensaje Fuera de Horario</label>\n                                    <textarea\n                                        value={formData.offlineMessage}\n                                        onChange={(e) => handleChange('offlineMessage', e.target.value)}\n                                        rows=\"3\"\n                                    />\n                                </div>\n                            </>\n                        )}\n                    </div>\n                )}\n\n                {/* TAB: Avanzado */}\n                {activeTab === 'advanced' && (\n                    <div className=\"config-section\">\n                        <h3>Configuraci√≥n Avanzada</h3>\n\n                        <div className=\"toggle-group\">\n                            <label className=\"toggle-label\">\n                                <input\n                                    type=\"checkbox\"\n                                    checked={formData.enableFileUpload}\n                                    onChange={(e) => handleChange('enableFileUpload', e.target.checked)}\n                                />\n                                <span className=\"toggle-switch\"></span>\n                                Permitir Carga de Archivos\n                            </label>\n                        </div>\n\n                        {formData.enableFileUpload && (\n                            <>\n                                <div className=\"form-group indent\">\n                                    <label>Tama√±o M√°ximo de Archivo (MB)</label>\n                                    <input\n                                        type=\"number\"\n                                        value={formData.maxFileSize}\n                                        onChange={(e) => handleChange('maxFileSize', parseInt(e.target.value))}\n                                        min=\"1\"\n                                        max=\"50\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group indent\">\n                                    <label>Tipos de Archivo Permitidos</label>\n                                    <input\n                                        type=\"text\"\n                                        value={formData.allowedFileTypes}\n                                        onChange={(e) => handleChange('allowedFileTypes', e.target.value)}\n                                        placeholder=\"image/*, .pdf, .doc, .docx\"\n                                    />\n                                    <small>Separar por comas</small>\n                                </div>\n                            </>\n                        )}\n\n                        <div className=\"alert alert-warning\">\n                            <span className=\"alert-icon\">‚ö†Ô∏è</span>\n                            <div>\n                                <strong>Atenci√≥n:</strong> Los cambios en configuraci√≥n avanzada pueden afectar el rendimiento del bot.\n                                Aseg√∫rate de probar en un ambiente de desarrollo primero.\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default BotConfiguration;","// frontend/admin-panel/src/components/Settings/SystemSettings.jsx\nimport React, { useState } from 'react';\nimport \"../../styles/components/SystemSettings.css\"\n\nconst SystemSettings = () => {\n    const [settings, setSettings] = useState({\n        // General\n        systemName: 'ChatBot Bancario',\n        systemEmail: 'support@banco.com',\n        adminEmail: 'admin@banco.com',\n\n        // Seguridad\n        sessionTimeout: 30,\n        maxLoginAttempts: 3,\n        passwordMinLength: 8,\n        requireStrongPassword: true,\n        enableTwoFactor: false,\n        enableIPWhitelist: false,\n        ipWhitelist: '',\n\n        // Notificaciones\n        emailNotifications: true,\n        slackNotifications: false,\n        slackWebhook: '',\n        notifyOnNewTicket: true,\n        notifyOnEscalation: true,\n        notifyOnHighPriority: true,\n\n        // Base de Datos\n        enableBackups: true,\n        backupFrequency: 'daily',\n        backupRetention: 30,\n\n        // Logs\n        enableAuditLog: true,\n        logRetention: 90,\n        logLevel: 'info',\n\n        // Integrations\n        enableWebhooks: false,\n        webhookUrl: '',\n        webhookEvents: [],\n\n        // Performance\n        cacheEnabled: true,\n        cacheDuration: 3600,\n        maxConcurrentConnections: 1000,\n        rateLimitPerMinute: 60\n    });\n\n    const [activeSection, setActiveSection] = useState('general');\n\n    const handleChange = (field, value) => {\n        setSettings(prev => ({\n            ...prev,\n            [field]: value\n        }));\n    };\n\n    const handleSave = async () => {\n        try {\n            // Aqu√≠ ir√≠a la llamada a la API\n            console.log('Guardando configuraci√≥n:', settings);\n            alert('Configuraci√≥n guardada exitosamente');\n        } catch (error) {\n            console.error('Error guardando configuraci√≥n:', error);\n            alert('Error al guardar la configuraci√≥n');\n        }\n    };\n\n    const handleTestWebhook = () => {\n        if (!settings.webhookUrl) {\n            alert('Por favor ingresa una URL de webhook');\n            return;\n        }\n        alert('Enviando webhook de prueba...');\n        // Aqu√≠ ir√≠a la l√≥gica de prueba\n    };\n\n    const handleExportSettings = () => {\n        const dataStr = JSON.stringify(settings, null, 2);\n        const dataBlob = new Blob([dataStr], { type: 'application/json' });\n        const url = URL.createObjectURL(dataBlob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = 'system-settings.json';\n        link.click();\n    };\n\n    return (\n        <div className=\"system-settings\">\n            <div className=\"settings-header\">\n                <div className=\"header-left\">\n                    <h2>Configuraci√≥n del Sistema</h2>\n                    <p className=\"subtitle\">Configuraci√≥n avanzada y par√°metros del sistema</p>\n                </div>\n                <div className=\"header-actions\">\n                    <button className=\"btn-secondary\" onClick={handleExportSettings}>\n                        üì• Exportar\n                    </button>\n                    <button className=\"btn-primary\" onClick={handleSave}>\n                        üíæ Guardar Cambios\n                    </button>\n                </div>\n            </div>\n\n            <div className=\"settings-layout\">\n                {/* Sidebar Menu */}\n                <div className=\"settings-sidebar\">\n                    <nav className=\"settings-nav\">\n                        <button\n                            className={activeSection === 'general' ? 'active' : ''}\n                            onClick={() => setActiveSection('general')}\n                        >\n                            üè¢ General\n                        </button>\n                        <button\n                            className={activeSection === 'security' ? 'active' : ''}\n                            onClick={() => setActiveSection('security')}\n                        >\n                            üîí Seguridad\n                        </button>\n                        <button\n                            className={activeSection === 'notifications' ? 'active' : ''}\n                            onClick={() => setActiveSection('notifications')}\n                        >\n                            üîî Notificaciones\n                        </button>\n                        <button\n                            className={activeSection === 'database' ? 'active' : ''}\n                            onClick={() => setActiveSection('database')}\n                        >\n                            üíæ Base de Datos\n                        </button>\n                        <button\n                            className={activeSection === 'logs' ? 'active' : ''}\n                            onClick={() => setActiveSection('logs')}\n                        >\n                            üìã Logs y Auditor√≠a\n                        </button>\n                        <button\n                            className={activeSection === 'integrations' ? 'active' : ''}\n                            onClick={() => setActiveSection('integrations')}\n                        >\n                            üîó Integraciones\n                        </button>\n                        <button\n                            className={activeSection === 'performance' ? 'active' : ''}\n                            onClick={() => setActiveSection('performance')}\n                        >\n                            ‚ö° Performance\n                        </button>\n                    </nav>\n                </div>\n\n                {/* Settings Content */}\n                <div className=\"settings-content\">\n\n                    {/* GENERAL */}\n                    {activeSection === 'general' && (\n                        <div className=\"settings-section\">\n                            <h3>Configuraci√≥n General</h3>\n\n                            <div className=\"form-group\">\n                                <label>Nombre del Sistema</label>\n                                <input\n                                    type=\"text\"\n                                    value={settings.systemName}\n                                    onChange={(e) => handleChange('systemName', e.target.value)}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Email del Sistema</label>\n                                <input\n                                    type=\"email\"\n                                    value={settings.systemEmail}\n                                    onChange={(e) => handleChange('systemEmail', e.target.value)}\n                                />\n                                <small>Email usado para enviar notificaciones autom√°ticas</small>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Email del Administrador</label>\n                                <input\n                                    type=\"email\"\n                                    value={settings.adminEmail}\n                                    onChange={(e) => handleChange('adminEmail', e.target.value)}\n                                />\n                                <small>Email para notificaciones cr√≠ticas del sistema</small>\n                            </div>\n                        </div>\n                    )}\n\n                    {/* SECURITY */}\n                    {activeSection === 'security' && (\n                        <div className=\"settings-section\">\n                            <h3>Seguridad</h3>\n\n                            <div className=\"form-group\">\n                                <label>Tiempo de Sesi√≥n (minutos)</label>\n                                <input\n                                    type=\"number\"\n                                    value={settings.sessionTimeout}\n                                    onChange={(e) => handleChange('sessionTimeout', parseInt(e.target.value))}\n                                    min=\"5\"\n                                    max=\"1440\"\n                                />\n                                <small>Tiempo de inactividad antes de cerrar sesi√≥n autom√°ticamente</small>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Intentos M√°ximos de Login</label>\n                                <input\n                                    type=\"number\"\n                                    value={settings.maxLoginAttempts}\n                                    onChange={(e) => handleChange('maxLoginAttempts', parseInt(e.target.value))}\n                                    min=\"1\"\n                                    max=\"10\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Longitud M√≠nima de Contrase√±a</label>\n                                <input\n                                    type=\"number\"\n                                    value={settings.passwordMinLength}\n                                    onChange={(e) => handleChange('passwordMinLength', parseInt(e.target.value))}\n                                    min=\"6\"\n                                    max=\"20\"\n                                />\n                            </div>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.requireStrongPassword}\n                                        onChange={(e) => handleChange('requireStrongPassword', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Requerir Contrase√±a Fuerte\n                                </label>\n                                <small>Debe incluir may√∫sculas, min√∫sculas, n√∫meros y caracteres especiales</small>\n                            </div>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.enableTwoFactor}\n                                        onChange={(e) => handleChange('enableTwoFactor', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Autenticaci√≥n de Dos Factores\n                                </label>\n                            </div>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.enableIPWhitelist}\n                                        onChange={(e) => handleChange('enableIPWhitelist', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Habilitar Lista Blanca de IPs\n                                </label>\n                            </div>\n\n                            {settings.enableIPWhitelist && (\n                                <div className=\"form-group indent\">\n                                    <label>IPs Permitidas (una por l√≠nea)</label>\n                                    <textarea\n                                        value={settings.ipWhitelist}\n                                        onChange={(e) => handleChange('ipWhitelist', e.target.value)}\n                                        rows=\"5\"\n                                        placeholder=\"192.168.1.1&#10;10.0.0.0/8\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    )}\n\n                    {/* NOTIFICATIONS */}\n                    {activeSection === 'notifications' && (\n                        <div className=\"settings-section\">\n                            <h3>Notificaciones</h3>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.emailNotifications}\n                                        onChange={(e) => handleChange('emailNotifications', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Notificaciones por Email\n                                </label>\n                            </div>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.notifyOnNewTicket}\n                                        onChange={(e) => handleChange('notifyOnNewTicket', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Notificar en Nuevos Tickets\n                                </label>\n                            </div>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.notifyOnEscalation}\n                                        onChange={(e) => handleChange('notifyOnEscalation', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Notificar en Escalaciones\n                                </label>\n                            </div>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.notifyOnHighPriority}\n                                        onChange={(e) => handleChange('notifyOnHighPriority', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Notificar en Tickets de Alta Prioridad\n                                </label>\n                            </div>\n\n                            <div className=\"divider\"></div>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.slackNotifications}\n                                        onChange={(e) => handleChange('slackNotifications', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Notificaciones a Slack\n                                </label>\n                            </div>\n\n                            {settings.slackNotifications && (\n                                <div className=\"form-group indent\">\n                                    <label>Slack Webhook URL</label>\n                                    <input\n                                        type=\"url\"\n                                        value={settings.slackWebhook}\n                                        onChange={(e) => handleChange('slackWebhook', e.target.value)}\n                                        placeholder=\"https://hooks.slack.com/services/...\"\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    )}\n\n                    {/* DATABASE */}\n                    {activeSection === 'database' && (\n                        <div className=\"settings-section\">\n                            <h3>Base de Datos y Respaldos</h3>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.enableBackups}\n                                        onChange={(e) => handleChange('enableBackups', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Habilitar Respaldos Autom√°ticos\n                                </label>\n                            </div>\n\n                            {settings.enableBackups && (\n                                <>\n                                    <div className=\"form-group indent\">\n                                        <label>Frecuencia de Respaldo</label>\n                                        <select\n                                            value={settings.backupFrequency}\n                                            onChange={(e) => handleChange('backupFrequency', e.target.value)}\n                                        >\n                                            <option value=\"hourly\">Cada hora</option>\n                                            <option value=\"daily\">Diario</option>\n                                            <option value=\"weekly\">Semanal</option>\n                                            <option value=\"monthly\">Mensual</option>\n                                        </select>\n                                    </div>\n\n                                    <div className=\"form-group indent\">\n                                        <label>Retenci√≥n de Respaldos (d√≠as)</label>\n                                        <input\n                                            type=\"number\"\n                                            value={settings.backupRetention}\n                                            onChange={(e) => handleChange('backupRetention', parseInt(e.target.value))}\n                                            min=\"1\"\n                                            max=\"365\"\n                                        />\n                                    </div>\n                                </>\n                            )}\n\n                            <div className=\"action-buttons\">\n                                <button className=\"btn-secondary\">\n                                    üóÑÔ∏è Crear Respaldo Manual\n                                </button>\n                                <button className=\"btn-secondary\">\n                                    üì• Restaurar desde Respaldo\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    {/* LOGS */}\n                    {activeSection === 'logs' && (\n                        <div className=\"settings-section\">\n                            <h3>Logs y Auditor√≠a</h3>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.enableAuditLog}\n                                        onChange={(e) => handleChange('enableAuditLog', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Habilitar Log de Auditor√≠a\n                                </label>\n                                <small>Registra todas las acciones de los usuarios</small>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Nivel de Log</label>\n                                <select\n                                    value={settings.logLevel}\n                                    onChange={(e) => handleChange('logLevel', e.target.value)}\n                                >\n                                    <option value=\"error\">Solo Errores</option>\n                                    <option value=\"warn\">Warnings y Errores</option>\n                                    <option value=\"info\">Info, Warnings y Errores</option>\n                                    <option value=\"debug\">Debug (Todo)</option>\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Retenci√≥n de Logs (d√≠as)</label>\n                                <input\n                                    type=\"number\"\n                                    value={settings.logRetention}\n                                    onChange={(e) => handleChange('logRetention', parseInt(e.target.value))}\n                                    min=\"7\"\n                                    max=\"365\"\n                                />\n                            </div>\n\n                            <div className=\"action-buttons\">\n                                <button className=\"btn-secondary\">\n                                    üìã Ver Logs\n                                </button>\n                                <button className=\"btn-secondary\">\n                                    üì• Descargar Logs\n                                </button>\n                                <button className=\"btn-danger\">\n                                    üóëÔ∏è Limpiar Logs Antiguos\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                    {/* INTEGRATIONS */}\n                    {activeSection === 'integrations' && (\n                        <div className=\"settings-section\">\n                            <h3>Integraciones</h3>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.enableWebhooks}\n                                        onChange={(e) => handleChange('enableWebhooks', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Habilitar Webhooks\n                                </label>\n                            </div>\n\n                            {settings.enableWebhooks && (\n                                <>\n                                    <div className=\"form-group indent\">\n                                        <label>Webhook URL</label>\n                                        <input\n                                            type=\"url\"\n                                            value={settings.webhookUrl}\n                                            onChange={(e) => handleChange('webhookUrl', e.target.value)}\n                                            placeholder=\"https://api.example.com/webhook\"\n                                        />\n                                    </div>\n\n                                    <div className=\"form-group indent\">\n                                        <label>Eventos a Enviar</label>\n                                        <div className=\"checkbox-group\">\n                                            {[\n                                                { value: 'ticket.created', label: 'Ticket Creado' },\n                                                { value: 'ticket.updated', label: 'Ticket Actualizado' },\n                                                { value: 'ticket.closed', label: 'Ticket Cerrado' },\n                                                { value: 'conversation.started', label: 'Conversaci√≥n Iniciada' },\n                                                { value: 'conversation.ended', label: 'Conversaci√≥n Finalizada' }\n                                            ].map(event => (\n                                                <label key={event.value} className=\"checkbox-label\">\n                                                    <input\n                                                        type=\"checkbox\"\n                                                        checked={settings.webhookEvents?.includes(event.value)}\n                                                        onChange={(e) => {\n                                                            const events = e.target.checked\n                                                                ? [...(settings.webhookEvents || []), event.value]\n                                                                : settings.webhookEvents.filter(ev => ev !== event.value);\n                                                            handleChange('webhookEvents', events);\n                                                        }}\n                                                    />\n                                                    {event.label}\n                                                </label>\n                                            ))}\n                                        </div>\n                                    </div>\n\n                                    <button className=\"btn-secondary\" onClick={handleTestWebhook}>\n                                        üß™ Probar Webhook\n                                    </button>\n                                </>\n                            )}\n                        </div>\n                    )}\n\n                    {/* PERFORMANCE */}\n                    {activeSection === 'performance' && (\n                        <div className=\"settings-section\">\n                            <h3>Performance y Optimizaci√≥n</h3>\n\n                            <div className=\"toggle-group\">\n                                <label className=\"toggle-label\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={settings.cacheEnabled}\n                                        onChange={(e) => handleChange('cacheEnabled', e.target.checked)}\n                                    />\n                                    <span className=\"toggle-switch\"></span>\n                                    Habilitar Cach√©\n                                </label>\n                            </div>\n\n                            {settings.cacheEnabled && (\n                                <div className=\"form-group indent\">\n                                    <label>Duraci√≥n del Cach√© (segundos)</label>\n                                    <input\n                                        type=\"number\"\n                                        value={settings.cacheDuration}\n                                        onChange={(e) => handleChange('cacheDuration', parseInt(e.target.value))}\n                                        min=\"60\"\n                                        max=\"86400\"\n                                    />\n                                </div>\n                            )}\n\n                            <div className=\"form-group\">\n                                <label>Conexiones Concurrentes M√°ximas</label>\n                                <input\n                                    type=\"number\"\n                                    value={settings.maxConcurrentConnections}\n                                    onChange={(e) => handleChange('maxConcurrentConnections', parseInt(e.target.value))}\n                                    min=\"100\"\n                                    max=\"10000\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Rate Limit (requests por minuto)</label>\n                                <input\n                                    type=\"number\"\n                                    value={settings.rateLimitPerMinute}\n                                    onChange={(e) => handleChange('rateLimitPerMinute', parseInt(e.target.value))}\n                                    min=\"10\"\n                                    max=\"1000\"\n                                />\n                            </div>\n\n                            <div className=\"action-buttons\">\n                                <button className=\"btn-secondary\">\n                                    üóëÔ∏è Limpiar Cach√©\n                                </button>\n                                <button className=\"btn-secondary\">\n                                    üîÑ Reiniciar Sistema\n                                </button>\n                            </div>\n                        </div>\n                    )}\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SystemSettings;","// frontend/admin-panel/src/components/Settings/UserManagement.jsx\nimport React, { useState } from 'react';\nimport '../../styles/components/UserManagement.css'\n\nconst UserManagement = () => {\n    const [users, setUsers] = useState([\n        {\n            id: 1,\n            name: 'Juan P√©rez',\n            email: 'juan.perez@banco.com',\n            role: 'admin',\n            status: 'active',\n            lastLogin: '2024-01-15 14:30',\n            createdAt: '2023-06-10'\n        },\n        {\n            id: 2,\n            name: 'Mar√≠a Garc√≠a',\n            email: 'maria.garcia@banco.com',\n            role: 'agent',\n            status: 'active',\n            lastLogin: '2024-01-15 13:45',\n            createdAt: '2023-07-22'\n        },\n        {\n            id: 3,\n            name: 'Carlos L√≥pez',\n            email: 'carlos.lopez@banco.com',\n            role: 'agent',\n            status: 'active',\n            lastLogin: '2024-01-14 18:20',\n            createdAt: '2023-08-05'\n        },\n        {\n            id: 4,\n            name: 'Ana Mart√≠nez',\n            email: 'ana.martinez@banco.com',\n            role: 'supervisor',\n            status: 'inactive',\n            lastLogin: '2024-01-10 09:15',\n            createdAt: '2023-09-12'\n        }\n    ]);\n\n    const [showAddModal, setShowAddModal] = useState(false);\n    const [showEditModal, setShowEditModal] = useState(false);\n    const [selectedUser, setSelectedUser] = useState(null);\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filterRole, setFilterRole] = useState('all');\n    const [filterStatus, setFilterStatus] = useState('all');\n\n    const [newUser, setNewUser] = useState({\n        name: '',\n        email: '',\n        role: 'agent',\n        password: ''\n    });\n\n    const roles = [\n        { value: 'admin', label: 'Administrador', color: '#9C27B0' },\n        { value: 'supervisor', label: 'Supervisor', color: '#FF9800' },\n        { value: 'agent', label: 'Agente', color: '#4CAF50' },\n        { value: 'viewer', label: 'Observador', color: '#2196F3' }\n    ];\n\n    const permissions = {\n        admin: ['Acceso completo', 'Gesti√≥n usuarios', 'Configuraci√≥n sistema', 'Ver reportes', 'Gestionar tickets'],\n        supervisor: ['Ver reportes', 'Gestionar tickets', 'Asignar agentes', 'Ver configuraci√≥n'],\n        agent: ['Ver tickets asignados', 'Responder conversaciones', 'Ver reportes b√°sicos'],\n        viewer: ['Ver reportes', 'Ver tickets', 'Solo lectura']\n    };\n\n    const filteredUsers = users.filter(user => {\n        const matchesSearch = user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            user.email.toLowerCase().includes(searchTerm.toLowerCase());\n        const matchesRole = filterRole === 'all' || user.role === filterRole;\n        const matchesStatus = filterStatus === 'all' || user.status === filterStatus;\n\n        return matchesSearch && matchesRole && matchesStatus;\n    });\n\n    const handleAddUser = () => {\n        if (!newUser.name || !newUser.email || !newUser.password) {\n            alert('Por favor completa todos los campos');\n            return;\n        }\n\n        const user = {\n            id: users.length + 1,\n            ...newUser,\n            status: 'active',\n            lastLogin: null,\n            createdAt: new Date().toISOString().split('T')[0]\n        };\n\n        setUsers([...users, user]);\n        setNewUser({ name: '', email: '', role: 'agent', password: '' });\n        setShowAddModal(false);\n        alert('Usuario agregado exitosamente');\n    };\n\n    const handleEditUser = () => {\n        setUsers(users.map(u => u.id === selectedUser.id ? selectedUser : u));\n        setShowEditModal(false);\n        setSelectedUser(null);\n        alert('Usuario actualizado exitosamente');\n    };\n\n    const handleDeleteUser = (userId) => {\n        if (window.confirm('¬øEst√°s seguro de eliminar este usuario?')) {\n            setUsers(users.filter(u => u.id !== userId));\n            alert('Usuario eliminado');\n        }\n    };\n\n    const handleToggleStatus = (userId) => {\n        setUsers(users.map(u =>\n            u.id === userId\n                ? { ...u, status: u.status === 'active' ? 'inactive' : 'active' }\n                : u\n        ));\n    };\n\n    const getRoleColor = (role) => {\n        return roles.find(r => r.value === role)?.color || '#9e9e9e';\n    };\n\n    const getRoleLabel = (role) => {\n        return roles.find(r => r.value === role)?.label || role;\n    };\n\n    return (\n        <div className=\"user-management\">\n            <div className=\"management-header\">\n                <div className=\"header-left\">\n                    <h2>Gesti√≥n de Usuarios</h2>\n                    <p className=\"subtitle\">Administra los usuarios y sus permisos</p>\n                </div>\n                <button\n                    className=\"btn-add-user\"\n                    onClick={() => setShowAddModal(true)}\n                >\n                    + Agregar Usuario\n                </button>\n            </div>\n\n            {/* Filters */}\n            <div className=\"filters-bar\">\n                <div className=\"search-box\">\n                    <span className=\"search-icon\">üîç</span>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Buscar por nombre o email...\"\n                        value={searchTerm}\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                </div>\n\n                <select\n                    value={filterRole}\n                    onChange={(e) => setFilterRole(e.target.value)}\n                    className=\"filter-select\"\n                >\n                    <option value=\"all\">Todos los roles</option>\n                    {roles.map(role => (\n                        <option key={role.value} value={role.value}>{role.label}</option>\n                    ))}\n                </select>\n\n                <select\n                    value={filterStatus}\n                    onChange={(e) => setFilterStatus(e.target.value)}\n                    className=\"filter-select\"\n                >\n                    <option value=\"all\">Todos los estados</option>\n                    <option value=\"active\">Activos</option>\n                    <option value=\"inactive\">Inactivos</option>\n                </select>\n            </div>\n\n            {/* Users Table */}\n            <div className=\"users-table-container\">\n                <table className=\"users-table\">\n                    <thead>\n                    <tr>\n                        <th>Usuario</th>\n                        <th>Email</th>\n                        <th>Rol</th>\n                        <th>Estado</th>\n                        <th>√öltimo Acceso</th>\n                        <th>Fecha Registro</th>\n                        <th>Acciones</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {filteredUsers.map(user => (\n                        <tr key={user.id}>\n                            <td>\n                                <div className=\"user-cell\">\n                                    <div className=\"user-avatar\">\n                                        {user.name.charAt(0)}\n                                    </div>\n                                    <span>{user.name}</span>\n                                </div>\n                            </td>\n                            <td>{user.email}</td>\n                            <td>\n                  <span\n                      className=\"role-badge\"\n                      style={{ background: getRoleColor(user.role) }}\n                  >\n                    {getRoleLabel(user.role)}\n                  </span>\n                            </td>\n                            <td>\n                                <button\n                                    className={`status-toggle ${user.status}`}\n                                    onClick={() => handleToggleStatus(user.id)}\n                                >\n                                    {user.status === 'active' ? 'Activo' : 'Inactivo'}\n                                </button>\n                            </td>\n                            <td>{user.lastLogin || 'Nunca'}</td>\n                            <td>{user.createdAt}</td>\n                            <td>\n                                <div className=\"action-buttons\">\n                                    <button\n                                        className=\"btn-icon\"\n                                        onClick={() => {\n                                            setSelectedUser({...user});\n                                            setShowEditModal(true);\n                                        }}\n                                        title=\"Editar\"\n                                    >\n                                        ‚úèÔ∏è\n                                    </button>\n                                    <button\n                                        className=\"btn-icon\"\n                                        onClick={() => handleDeleteUser(user.id)}\n                                        title=\"Eliminar\"\n                                    >\n                                        üóëÔ∏è\n                                    </button>\n                                </div>\n                            </td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n\n                {filteredUsers.length === 0 && (\n                    <div className=\"empty-state\">\n                        <p>No se encontraron usuarios</p>\n                    </div>\n                )}\n            </div>\n\n            {/* Add User Modal */}\n            {showAddModal && (\n                <div className=\"modal-overlay\" onClick={() => setShowAddModal(false)}>\n                    <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n                        <div className=\"modal-header\">\n                            <h3>Agregar Nuevo Usuario</h3>\n                            <button className=\"modal-close\" onClick={() => setShowAddModal(false)}>‚úï</button>\n                        </div>\n\n                        <div className=\"modal-body\">\n                            <div className=\"form-group\">\n                                <label>Nombre Completo</label>\n                                <input\n                                    type=\"text\"\n                                    value={newUser.name}\n                                    onChange={(e) => setNewUser({...newUser, name: e.target.value})}\n                                    placeholder=\"Juan P√©rez\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Email</label>\n                                <input\n                                    type=\"email\"\n                                    value={newUser.email}\n                                    onChange={(e) => setNewUser({...newUser, email: e.target.value})}\n                                    placeholder=\"juan.perez@banco.com\"\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Rol</label>\n                                <select\n                                    value={newUser.role}\n                                    onChange={(e) => setNewUser({...newUser, role: e.target.value})}\n                                >\n                                    {roles.map(role => (\n                                        <option key={role.value} value={role.value}>{role.label}</option>\n                                    ))}\n                                </select>\n\n                                <div className=\"permissions-preview\">\n                                    <strong>Permisos:</strong>\n                                    <ul>\n                                        {permissions[newUser.role]?.map((perm, idx) => (\n                                            <li key={idx}>‚úì {perm}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Contrase√±a Temporal</label>\n                                <input\n                                    type=\"password\"\n                                    value={newUser.password}\n                                    onChange={(e) => setNewUser({...newUser, password: e.target.value})}\n                                    placeholder=\"‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\"\n                                />\n                                <small>El usuario deber√° cambiar su contrase√±a en el primer acceso</small>\n                            </div>\n                        </div>\n\n                        <div className=\"modal-footer\">\n                            <button className=\"btn-cancel\" onClick={() => setShowAddModal(false)}>\n                                Cancelar\n                            </button>\n                            <button className=\"btn-submit\" onClick={handleAddUser}>\n                                Agregar Usuario\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            {/* Edit User Modal */}\n            {showEditModal && selectedUser && (\n                <div className=\"modal-overlay\" onClick={() => setShowEditModal(false)}>\n                    <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n                        <div className=\"modal-header\">\n                            <h3>Editar Usuario</h3>\n                            <button className=\"modal-close\" onClick={() => setShowEditModal(false)}>‚úï</button>\n                        </div>\n\n                        <div className=\"modal-body\">\n                            <div className=\"form-group\">\n                                <label>Nombre Completo</label>\n                                <input\n                                    type=\"text\"\n                                    value={selectedUser.name}\n                                    onChange={(e) => setSelectedUser({...selectedUser, name: e.target.value})}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Email</label>\n                                <input\n                                    type=\"email\"\n                                    value={selectedUser.email}\n                                    onChange={(e) => setSelectedUser({...selectedUser, email: e.target.value})}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Rol</label>\n                                <select\n                                    value={selectedUser.role}\n                                    onChange={(e) => setSelectedUser({...selectedUser, role: e.target.value})}\n                                >\n                                    {roles.map(role => (\n                                        <option key={role.value} value={role.value}>{role.label}</option>\n                                    ))}\n                                </select>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Estado</label>\n                                <select\n                                    value={selectedUser.status}\n                                    onChange={(e) => setSelectedUser({...selectedUser, status: e.target.value})}\n                                >\n                                    <option value=\"active\">Activo</option>\n                                    <option value=\"inactive\">Inactivo</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div className=\"modal-footer\">\n                            <button className=\"btn-cancel\" onClick={() => setShowEditModal(false)}>\n                                Cancelar\n                            </button>\n                            <button className=\"btn-submit\" onClick={handleEditUser}>\n                                Guardar Cambios\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default UserManagement;","// frontend/admin-panel/src/pages/SettingsPage.jsx - MEJORADO\nimport React, { useState } from \"react\";\nimport \"../styles/pages/SettingsPage.css\";\nimport BotConfiguration from \"../components/Settings/BotConfiguration.jsx\";\nimport SystemSettings from \"../components/Settings/SystemSettings.jsx\";\nimport UserManagement from \"../components/Settings/UserManagement.jsx\";\n\nconst SettingsPage = () => {\n    const [activeTab, setActiveTab] = useState('system');\n\n    // Mock data para BotConfiguration\n    const botConfig = {\n        botName: 'ChatBot Bancario',\n        welcomeMessage: '¬°Hola! ¬øEn qu√© puedo ayudarte hoy?',\n        primaryColor: '#667eea',\n        language: 'es',\n        timezone: 'America/Santo_Domingo',\n        maxConversationDuration: 30,\n        autoEscalationEnabled: false,\n        autoEscalationTimeout: 5,\n        confidenceThreshold: 0.7,\n        fallbackMessage: 'Lo siento, no entend√≠ tu consulta. ¬øPodr√≠as reformularla?',\n        enableTypingIndicator: true,\n        enableFileUpload: true,\n        maxFileSize: 10,\n        allowedFileTypes: 'image/*, .pdf, .doc, .docx',\n        operatingHours: {\n            enabled: false,\n            start: '09:00',\n            end: '18:00',\n            days: ['monday', 'tuesday', 'wednesday', 'thursday', 'friday']\n        },\n        offlineMessage: 'Estamos fuera de horario. Nuestro horario es de lunes a viernes de 9:00 AM a 6:00 PM.',\n        enableSentimentAnalysis: true,\n        enableSpellCheck: true,\n        maxRetries: 3\n    };\n\n    const handleSaveBotConfig = async (config) => {\n        console.log('Guardando configuraci√≥n del bot:', config);\n        // Aqu√≠ ir√≠a la llamada a la API para guardar la configuraci√≥n\n        return Promise.resolve();\n    };\n\n    const handleTabClick = (tab) => {\n        setActiveTab(tab);\n    };\n\n    return (\n        <div className=\"settings-page\">\n            <div className=\"settings-page-header\">\n                <h1>Configuraci√≥n del Sistema</h1>\n                <p>Gestiona la configuraci√≥n del sistema, bot y usuarios</p>\n            </div>\n\n            <div className=\"settings-tabs\">\n                <button\n                    className={`settings-tab ${activeTab === 'system' ? 'active' : ''}`}\n                    onClick={() => handleTabClick('system')}\n                    aria-label=\"Configuraci√≥n del Sistema\"\n                >\n                    <span className=\"tab-icon\">‚öôÔ∏è</span>\n                    Configuraci√≥n del Sistema\n                </button>\n                <button\n                    className={`settings-tab ${activeTab === 'bot' ? 'active' : ''}`}\n                    onClick={() => handleTabClick('bot')}\n                    aria-label=\"Configuraci√≥n del Bot\"\n                >\n                    <span className=\"tab-icon\">ü§ñ</span>\n                    Configuraci√≥n del Bot\n                </button>\n                <button\n                    className={`settings-tab ${activeTab === 'users' ? 'active' : ''}`}\n                    onClick={() => handleTabClick('users')}\n                    aria-label=\"Gesti√≥n de Usuarios\"\n                >\n                    <span className=\"tab-icon\">üë•</span>\n                    Gesti√≥n de Usuarios\n                </button>\n            </div>\n\n            <div className=\"settings-content\">\n                {activeTab === 'system' && (\n                    <SystemSettings />\n                )}\n\n                {activeTab === 'bot' && (\n                    <BotConfiguration\n                        config={botConfig}\n                        onSave={handleSaveBotConfig}\n                    />\n                )}\n\n                {activeTab === 'users' && (\n                    <UserManagement />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SettingsPage;\n","// frontend/admin-panel/src/services/websocketService.js\nconst WS_BASE_URL = import.meta.env.VITE_WS_URL || 'ws://localhost:8000';\n\nclass WebSocketService {\n    constructor() {\n        this.ws = null;\n        this.listeners = {};\n        this.reconnectAttempts = 0;\n        this.maxReconnectAttempts = 5;\n        this.reconnectDelay = 3000;\n        this.isIntentionalClose = false;\n        this.pingInterval = null;\n    }\n\n    // Connect to WebSocket\n    connect(token = null) {\n        this.isIntentionalClose = false;\n\n        const authToken = token || localStorage.getItem('token');\n        const wsUrl = `${WS_BASE_URL}/ws/admin?token=${authToken}`;\n\n        try {\n            this.ws = new WebSocket(wsUrl);\n            this.setupEventHandlers();\n            this.startPingInterval();\n\n            console.log('Connecting to Admin WebSocket...');\n        } catch (error) {\n            console.error('Error connecting to WebSocket:', error);\n            this.handleReconnect();\n        }\n    }\n\n    // Setup event handlers\n    setupEventHandlers() {\n        this.ws.onopen = () => {\n            console.log('Admin WebSocket connected');\n            this.reconnectAttempts = 0;\n            this.emit('connected');\n        };\n\n        this.ws.onmessage = (event) => {\n            try {\n                const data = JSON.parse(event.data);\n                console.log('WebSocket message received:', data);\n\n                // Handle different message types\n                if (data.type === 'pong') {\n                    // Keep-alive response\n                    return;\n                }\n\n                // Emit specific event\n                if (data.type) {\n                    this.emit(data.type, data);\n                }\n\n                // Emit general message event\n                this.emit('message', data);\n            } catch (error) {\n                console.error('Error parsing WebSocket message:', error);\n            }\n        };\n\n        this.ws.onerror = (error) => {\n            console.error('WebSocket error:', error);\n            this.emit('error', error);\n        };\n\n        this.ws.onclose = (event) => {\n            console.log('WebSocket closed', event.code, event.reason);\n            this.stopPingInterval();\n            this.emit('disconnected', { code: event.code, reason: event.reason });\n\n            // Try to reconnect if not intentional close\n            if (!this.isIntentionalClose && this.reconnectAttempts < this.maxReconnectAttempts) {\n                this.handleReconnect();\n            }\n        };\n    }\n\n    // Handle reconnection\n    handleReconnect() {\n        if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('Max reconnection attempts reached');\n            this.emit('maxReconnectAttempts');\n            return;\n        }\n\n        this.reconnectAttempts++;\n        const delay = this.reconnectDelay * this.reconnectAttempts;\n\n        console.log(`Reconnecting in ${delay}ms (attempt ${this.reconnectAttempts})`);\n\n        setTimeout(() => {\n            this.connect();\n        }, delay);\n    }\n\n    // Start ping interval to keep connection alive\n    startPingInterval() {\n        this.pingInterval = setInterval(() => {\n            if (this.isConnected()) {\n                this.send({ type: 'ping' });\n            }\n        }, 30000); // Ping every 30 seconds\n    }\n\n    // Stop ping interval\n    stopPingInterval() {\n        if (this.pingInterval) {\n            clearInterval(this.pingInterval);\n            this.pingInterval = null;\n        }\n    }\n\n    // Send message\n    send(data) {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            this.ws.send(JSON.stringify(data));\n        } else {\n            console.warn('WebSocket is not connected');\n        }\n    }\n\n    // Subscribe to ticket updates\n    subscribeToTicket(ticketId) {\n        this.send({\n            type: 'subscribe',\n            channel: 'ticket',\n            ticketId\n        });\n    }\n\n    // Unsubscribe from ticket\n    unsubscribeFromTicket(ticketId) {\n        this.send({\n            type: 'unsubscribe',\n            channel: 'ticket',\n            ticketId\n        });\n    }\n\n    // Subscribe to real-time stats\n    subscribeToStats() {\n        this.send({\n            type: 'subscribe',\n            channel: 'stats'\n        });\n    }\n\n    // Send typing indicator\n    sendTyping(ticketId, isTyping) {\n        this.send({\n            type: 'typing',\n            ticketId,\n            isTyping\n        });\n    }\n\n    // Register event listener\n    on(event, callback) {\n        if (!this.listeners[event]) {\n            this.listeners[event] = [];\n        }\n        this.listeners[event].push(callback);\n    }\n\n    // Remove event listener\n    off(event, callback) {\n        if (this.listeners[event]) {\n            this.listeners[event] = this.listeners[event].filter(cb => cb !== callback);\n        }\n    }\n\n    // Emit event to all listeners\n    emit(event, data) {\n        if (this.listeners[event]) {\n            this.listeners[event].forEach(callback => {\n                try {\n                    callback(data);\n                } catch (error) {\n                    console.error(`Error in listener for event ${event}:`, error);\n                }\n            });\n        }\n    }\n\n    // Check if connected\n    isConnected() {\n        return this.ws && this.ws.readyState === WebSocket.OPEN;\n    }\n\n    // Disconnect\n    disconnect() {\n        this.isIntentionalClose = true;\n        this.stopPingInterval();\n        if (this.ws) {\n            this.ws.close();\n            this.ws = null;\n        }\n        this.listeners = {};\n    }\n}\n\nexport default new WebSocketService();","// frontend/admin-panel/src/App.jsx\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Header from './components/Common/Header';\nimport Sidebar from './components/Common/Sidebar';\nimport ErrorBoundary from './components/Common/ErrorBoundary';\nimport LoginPage from './pages/LoginPage';\nimport DashboardPage from './pages/DashboardPage';\nimport TicketsPage from './pages/TicketsPage';\nimport ConversationsPage from './pages/ConversationPage';\nimport AnalyticsPage from './pages/AnalyticsPage';\nimport CustomersPage from './pages/CustomerPage';\nimport KnowledgeBasePage from './pages/KnowledgeBasePage';\nimport SettingsPage from './pages/SettingsPage';\nimport authService from './services/authService';\nimport websocketService from './services/websocketService';\nimport './styles/globals.css';\n\n// Protected Route Component\nconst ProtectedRoute = ({ children }) => {\n    const isAuthenticated = authService.isAuthenticated();\n\n    if (!isAuthenticated) {\n        return <Navigate to=\"/login\" replace />;\n    }\n\n    return children;\n};\n\n// Main Layout Component\nconst MainLayout = ({ children }) => {\n    const [sidebarCollapsed, setSidebarCollapsed] = useState(\n        localStorage.getItem('sidebarCollapsed') === 'true'\n    );\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        // Load user data\n        const currentUser = authService.getCurrentUser();\n        setUser(currentUser);\n\n        // Connect to WebSocket\n        if (authService.isAuthenticated()) {\n            websocketService.connect();\n        }\n\n        // Cleanup on unmount\n        return () => {\n            websocketService.disconnect();\n        };\n    }, []);\n\n    const handleToggleSidebar = () => {\n        const newState = !sidebarCollapsed;\n        setSidebarCollapsed(newState);\n        localStorage.setItem('sidebarCollapsed', newState);\n    };\n\n    const handleLogout = () => {\n        authService.logout();\n    };\n\n    return (\n        <div className={`app-container ${sidebarCollapsed ? 'sidebar-collapsed' : ''}`}>\n            <Sidebar\n                collapsed={sidebarCollapsed}\n                onToggle={handleToggleSidebar}\n            />\n\n            <div className=\"main-content\">\n                <Header\n                    user={user}\n                    onLogout={handleLogout}\n                />\n\n                <main className=\"page-container\">\n                    {children}\n                </main>\n            </div>\n        </div>\n    );\n};\n\nfunction App() {\n    return (\n        <ErrorBoundary>\n            <Router>\n                <Routes>\n                    {/* Public Routes */}\n                    <Route path=\"/login\" element={<LoginPage />} />\n\n                    {/* Protected Routes */}\n                    <Route\n                        path=\"/\"\n                        element={\n                            <ProtectedRoute>\n                                <Navigate to=\"/dashboard\" replace />\n                            </ProtectedRoute>\n                        }\n                    />\n\n                    <Route\n                        path=\"/dashboard\"\n                        element={\n                            <ProtectedRoute>\n                                <MainLayout>\n                                    <DashboardPage />\n                                </MainLayout>\n                            </ProtectedRoute>\n                        }\n                    />\n\n                    <Route\n                        path=\"/tickets\"\n                        element={\n                            <ProtectedRoute>\n                                <MainLayout>\n                                    <TicketsPage />\n                                </MainLayout>\n                            </ProtectedRoute>\n                        }\n                    />\n\n                    <Route\n                        path=\"/conversations\"\n                        element={\n                            <ProtectedRoute>\n                                <MainLayout>\n                                    <ConversationsPage />\n                                </MainLayout>\n                            </ProtectedRoute>\n                        }\n                    />\n\n                    <Route\n                        path=\"/analytics\"\n                        element={\n                            <ProtectedRoute>\n                                <MainLayout>\n                                    <AnalyticsPage />\n                                </MainLayout>\n                            </ProtectedRoute>\n                        }\n                    />\n\n                    <Route\n                        path=\"/customers\"\n                        element={\n                            <ProtectedRoute>\n                                <MainLayout>\n                                    <CustomersPage />\n                                </MainLayout>\n                            </ProtectedRoute>\n                        }\n                    />\n\n                    <Route\n                        path=\"/knowledge\"\n                        element={\n                            <ProtectedRoute>\n                                <MainLayout>\n                                    <KnowledgeBasePage />\n                                </MainLayout>\n                            </ProtectedRoute>\n                        }\n                    />\n\n                    <Route\n                        path=\"/settings\"\n                        element={\n                            <ProtectedRoute>\n                                <MainLayout>\n                                    <SettingsPage />\n                                </MainLayout>\n                            </ProtectedRoute>\n                        }\n                    />\n\n                    {/* Catch all - 404 */}\n                    <Route\n                        path=\"*\"\n                        element={\n                            <div style={{ padding: '40px', textAlign: 'center' }}>\n                                <h1>404 - P√°gina no encontrada</h1>\n                                <p>La p√°gina que buscas no existe.</p>\n                                <a href=\"/dashboard\">Volver al Dashboard</a>\n                            </div>\n                        }\n                    />\n                </Routes>\n            </Router>\n        </ErrorBoundary>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './styles/globals.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","reactJsxRuntime_production_min","jsxRuntimeModule","client","Header","user","onLogout","showUserMenu","setShowUserMenu","useState","showNotifications","setShowNotifications","darkMode","setDarkMode","notifications","setNotifications","userMenuRef","useRef","notificationRef","unreadCount","useEffect","isDark","applyTheme","handleClickOutside","event","toggleDarkMode","newDarkMode","handleMarkAsRead","notificationId","handleMarkAllAsRead","getNotificationIcon","type","jsxs","jsx","notification","Sidebar","collapsed","onToggle","navigate","useNavigate","location","useLocation","menuItems","isActive","path","handleNavigate","item","Fragment","ErrorBoundary","Component","props","error","errorInfo","API_BASE_URL","ApiService","token","endpoint","options","url","config","response","data","file","additionalData","formData","key","headers","api","MOCK_USERS","AuthService","email","password","resolve","u","mockToken","userStr","currentPassword","newPassword","userData","updatedUser","authService","LoginPage","credentials","setCredentials","setError","loading","setLoading","handleSubmit","result","err","MetricsCards","metrics","timeRange","cards","handleCardClick","cardTitle","index","card","ChartsSection","conversationsPeriod","setConversationsPeriod","ticketsPeriod","setTicketsPeriod","isAnimating","setIsAnimating","conversationsData","ticketsData","days","months","getMaxValue","getLabels","period","handlePeriodChange","setter","handleActivityClick","activity","btn","value","maxValue","height","labels","total","percentage","colors","icons","DashboardPage","setTimeRange","chartData","TicketDetail","ticket","onUpdate","onClose","status","setStatus","priority","setPriority","assignedTo","setAssignedTo","notes","setNotes","showNotesForm","setShowNotesForm","statusOptions","priorityOptions","agents","handleSave","handleAddNote","formatDate","date","option","agent","note","TicketChat","ticketId","initialMessages","onSendMessage","messages","setMessages","newMessage","setNewMessage","isTyping","setIsTyping","messagesEndRef","chatContainerRef","scrollToBottom","handleSendMessage","message","handleKeyPress","formatTime","timestamp","today","yesterday","messageGroups","groups","msgs","attachment","idx","TicketFilters","filters","onFilterChange","onReset","isExpanded","setIsExpanded","categoryOptions","handleFilterChange","filterType","hasActiveFilters","v","LoadingSpinner","size","fullScreen","sizeClasses","spinner","TicketService","queryParams","queryString","ticketData","agentId","format","ticketService","TicketList","tickets","selectedTicket","onSelectTicket","TicketsPage","setTickets","setSelectedTicket","view","setView","isLoading","setIsLoading","setFilters","loadTickets","handleSelectTicket","handleUpdateTicket","t","handleCloseDetail","newFilters","handleResetFilters","ConversationsPage","conversations","setConversations","selectedConversation","setSelectedConversation","filter","setFilter","searchTerm","setSearchTerm","loadConversations","mockConversations","filterOptions","getStatusColor","getChannelIcon","channel","getPriorityColor","filteredConversations","conv","conversation","AnalyticsDashboard","setPeriod","selectedMetric","setSelectedMetric","getTrendIcon","trend","getTrendClass","metric","issue","ConversationAnalytics","viewMode","setViewMode","conversationMetrics","conversationFlow","intentDistribution","hourlyDistribution","stage","intent","maxConversations","AgentPerformance","selectedAgent","setSelectedAgent","sortBy","setSortBy","sortedAgents","getStatusLabel","acc","AnalyticsPage","activeView","setActiveView","views","getActiveView","CustomersPage","customers","customer","KnowledgeBasePage","articles","article","BotConfiguration","onSave","setFormData","isSaving","setIsSaving","activeTab","setActiveTab","handleChange","field","prev","handleNestedChange","parent","handleArrayChange","daysOfWeek","day","newDays","SystemSettings","settings","setSettings","activeSection","setActiveSection","handleTestWebhook","handleExportSettings","dataStr","dataBlob","link","events","ev","UserManagement","users","setUsers","showAddModal","setShowAddModal","showEditModal","setShowEditModal","selectedUser","setSelectedUser","filterRole","setFilterRole","filterStatus","setFilterStatus","newUser","setNewUser","roles","permissions","filteredUsers","matchesSearch","matchesRole","matchesStatus","handleAddUser","handleEditUser","handleDeleteUser","userId","handleToggleStatus","getRoleColor","role","r","getRoleLabel","perm","SettingsPage","botConfig","handleSaveBotConfig","handleTabClick","tab","WS_BASE_URL","WebSocketService","authToken","wsUrl","delay","callback","cb","websocketService","ProtectedRoute","children","Navigate","MainLayout","sidebarCollapsed","setSidebarCollapsed","setUser","currentUser","handleToggleSidebar","newState","handleLogout","App","Router","Routes","Route","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0,1,2]}