# 🔧 Variables de Entorno - Banking Chatbot con IA
# Ubicación: /.env.example
#
# INSTRUCCIONES:
# 1. Copia este archivo como .env
# 2. Llena los valores reales
# 3. NUNCA commites .env al repositorio

# 🏗️ Aplicación
APP_NAME="Banking Chatbot API"
APP_VERSION="1.0.0"
DEBUG=True
API_VERSION=v1
ENVIRONMENT=development
HOST=0.0.0.0
PORT=8000

# 🗄️ Base de datos
DATABASE_URL=sqlite:///./chatbot.db
DATABASE_ECHO=True
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password
POSTGRES_DB=banking_chatbot

# 🔴 Redis
REDIS_URL=redis://localhost:6379/0
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=

# 🔍 Vector Database (Qdrant)
VECTOR_DB_URL=http://localhost:6333
VECTOR_COLLECTION_NAME=banking_knowledge
VECTOR_SIZE=384

# 🤖 LLM Configuration
LLM_PROVIDER=openai
LLM_MODEL=gpt-3.5-turbo
LLM_TEMPERATURE=0.7
LLM_MAX_TOKENS=1000
LLM_TIMEOUT=30

# 🔑 API Keys (¡CAMBIA ESTOS!)
OPENAI_API_KEY=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
OPENAI_MODEL=gpt-3.5-turbo
OPENAI_ORGANIZATION_ID=org-your-org-id

ANTHROPIC_API_KEY=sk-ant-your-anthropic-key-here
ANTHROPIC_MODEL=claude-3-sonnet-20240229

# 🏠 Local LLM (Ollama/vLLM)
LOCAL_LLM_URL=http://localhost:11434
LOCAL_LLM_MODEL=llama2

# 🔐 Seguridad (¡CAMBIA ESTO!)
SECRET_KEY=your-super-secret-key-change-in-production-make-it-long
ACCESS_TOKEN_EXPIRE_MINUTES=30
ALGORITHM=HS256

# 🌐 CORS
CORS_ORIGINS=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000
CORS_CREDENTIALS=true
CORS_METHODS=["*"]
CORS_HEADERS=["*"]

# 📊 Monitoring
LOG_LEVEL=INFO
LOG_FORMAT=json
ENABLE_METRICS=True
METRICS_PORT=9090
SENTRY_DSN=https://your-sentry-dsn

# 🤖 AI Features
AI_ENABLED=True
RAG_ENABLED=True
FALLBACK_TO_MOCK=True
SIMILARITY_THRESHOLD=0.7
MAX_CONTEXT_LENGTH=2000

# 📄 Document Processing
MAX_DOCUMENT_SIZE_MB=10
SUPPORTED_FORMATS=pdf,docx,txt
CHUNK_SIZE=500
CHUNK_OVERLAP=50

# Vector Database (Qdrant)
QDRANT_URL=http://localhost:6333
QDRANT_API_KEY=
QDRANT_COLLECTION_NAME=banking_knowledge

# ═══════════════════════════════════════════════════════════════
# 🔐 SEGURIDAD
# ═══════════════════════════════════════════════════════════════
# JWT Configuration
JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Encryption
ENCRYPTION_KEY=your-32-char-encryption-key-here

# ═══════════════════════════════════════════════════════════════
# 🏦 CORE BANKING (MOCK)
# ═══════════════════════════════════════════════════════════════
CORE_BANKING_URL=http://localhost:8001
CORE_BANKING_API_KEY=mock-api-key
CORE_BANKING_TIMEOUT=30

# ═══════════════════════════════════════════════════════════════
# 🎯 FEATURES FLAGS
# ═══════════════════════════════════════════════════════════════
ENABLE_AUTH=false# Deshabilitado para desarrollo local
ENABLE_RATE_LIMITING=false
ENABLE_AUDIT_LOG=true
ENABLE_DLP=false# Data Loss Prevention
ENABLE_MOCK_BANKING=true

# ═══════════════════════════════════════════════════════════════
# 🧪 TESTING
# ═══════════════════════════════════════════════════════════════
TEST_DATABASE_URL=postgresql://postgres:password@localhost:5432/banking_chatbot_test
PYTEST_MARKERS=unit,integration

# ═══════════════════════════════════════════════════════════════
# 📝 NOTAS DE CONFIGURACIÓN
# ═══════════════════════════════════════════════════════════════
# 1. Copia este archivo a .env.development
# 2. Actualiza OPENAI_API_KEY con tu clave real
# 3. Si no tienes PostgreSQL/Redis locales, usa Docker:
#    docker run -d -p 5432:5432 -e POSTGRES_PASSWORD=password postgres:15
#    docker run -d -p 6379:6379 redis:7-alpine
# 4. Para Qdrant: docker run -d -p 6333:6333 qdrant/qdrant